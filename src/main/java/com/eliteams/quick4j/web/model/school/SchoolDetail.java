/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */
package com.eliteams.quick4j.web.model.school;

import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import org.apache.thrift.*;
import org.apache.thrift.async.*;
import org.apache.thrift.meta_data.*;
import org.apache.thrift.transport.*;
import org.apache.thrift.protocol.*;

public class SchoolDetail implements TBase<SchoolDetail, SchoolDetail._Fields>, java.io.Serializable, Cloneable {
  private static final TStruct STRUCT_DESC = new TStruct("SchoolDetail");

  private static final TField ID_FIELD_DESC = new TField("id", TType.I64, (short)1);
  private static final TField SCHOOL_ID_FIELD_DESC = new TField("schoolId", TType.STRING, (short)2);
  private static final TField SCHOOL_NAME_FIELD_DESC = new TField("schoolName", TType.STRING, (short)3);
  private static final TField SCHOOL_ABBREVIATE_FIELD_DESC = new TField("schoolAbbreviate", TType.STRING, (short)4);
  private static final TField SCHOOL_ADDRESS_FIELD_DESC = new TField("schoolAddress", TType.STRING, (short)5);
  private static final TField SCHOOL_COORDINATE_FIELD_DESC = new TField("schoolCoordinate", TType.STRING, (short)6);
  private static final TField PROVINCE_CODE_FIELD_DESC = new TField("provinceCode", TType.I32, (short)7);
  private static final TField PROVINCE_NAME_FIELD_DESC = new TField("provinceName", TType.STRING, (short)8);
  private static final TField CITY_CODE_FIELD_DESC = new TField("cityCode", TType.I32, (short)9);
  private static final TField CITY_NAME_FIELD_DESC = new TField("cityName", TType.STRING, (short)10);
  private static final TField DISTRICT_CODE_FIELD_DESC = new TField("districtCode", TType.I32, (short)11);
  private static final TField DISTRICT_NAME_FIELD_DESC = new TField("districtName", TType.STRING, (short)12);
  private static final TField CANTEEN_LIST_FIELD_DESC = new TField("canteenList", TType.STRING, (short)13);
  private static final TField SELLER_LIST_FIELD_DESC = new TField("sellerList", TType.STRING, (short)14);
  private static final TField STATUS_FIELD_DESC = new TField("status", TType.STRING, (short)15);
  private static final TField SCHOOL_PHOTO_JSONS_FIELD_DESC = new TField("schoolPhotoJsons", TType.STRING, (short)16);
  private static final TField CONTRACT_PHOTO_JSONS_FIELD_DESC = new TField("contractPhotoJsons", TType.STRING, (short)17);
  private static final TField EXTRA_DATA1_FIELD_DESC = new TField("extraData1", TType.STRING, (short)18);
  private static final TField EXTRA_DATA2_FIELD_DESC = new TField("extraData2", TType.STRING, (short)19);
  private static final TField CREATE_TIME_FIELD_DESC = new TField("createTime", TType.I64, (short)20);
  private static final TField UPDATE_TIME_FIELD_DESC = new TField("updateTime", TType.I64, (short)21);
  private static final TField ONLINE_TIME_FIELD_DESC = new TField("onlineTime", TType.I64, (short)22);
  private static final TField OFFLINE_TIME_FIELD_DESC = new TField("offlineTime", TType.I64, (short)23);

  public long id;
  public String schoolId;
  public String schoolName;
  public String schoolAbbreviate;
  public String schoolAddress;
  public String schoolCoordinate;
  public int provinceCode;
  public String provinceName;
  public int cityCode;
  public String cityName;
  public int districtCode;
  public String districtName;
  public String canteenList;
  public String sellerList;
  public String status;
  public String schoolPhotoJsons;
  public String contractPhotoJsons;
  public String extraData1;
  public String extraData2;
  public long createTime;
  public long updateTime;
  public long onlineTime;
  public long offlineTime;

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements TFieldIdEnum {
    ID((short)1, "id"),
    SCHOOL_ID((short)2, "schoolId"),
    SCHOOL_NAME((short)3, "schoolName"),
    SCHOOL_ABBREVIATE((short)4, "schoolAbbreviate"),
    SCHOOL_ADDRESS((short)5, "schoolAddress"),
    SCHOOL_COORDINATE((short)6, "schoolCoordinate"),
    PROVINCE_CODE((short)7, "provinceCode"),
    PROVINCE_NAME((short)8, "provinceName"),
    CITY_CODE((short)9, "cityCode"),
    CITY_NAME((short)10, "cityName"),
    DISTRICT_CODE((short)11, "districtCode"),
    DISTRICT_NAME((short)12, "districtName"),
    CANTEEN_LIST((short)13, "canteenList"),
    SELLER_LIST((short)14, "sellerList"),
    STATUS((short)15, "status"),
    SCHOOL_PHOTO_JSONS((short)16, "schoolPhotoJsons"),
    CONTRACT_PHOTO_JSONS((short)17, "contractPhotoJsons"),
    EXTRA_DATA1((short)18, "extraData1"),
    EXTRA_DATA2((short)19, "extraData2"),
    CREATE_TIME((short)20, "createTime"),
    UPDATE_TIME((short)21, "updateTime"),
    ONLINE_TIME((short)22, "onlineTime"),
    OFFLINE_TIME((short)23, "offlineTime");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // SCHOOL_ID
          return SCHOOL_ID;
        case 3: // SCHOOL_NAME
          return SCHOOL_NAME;
        case 4: // SCHOOL_ABBREVIATE
          return SCHOOL_ABBREVIATE;
        case 5: // SCHOOL_ADDRESS
          return SCHOOL_ADDRESS;
        case 6: // SCHOOL_COORDINATE
          return SCHOOL_COORDINATE;
        case 7: // PROVINCE_CODE
          return PROVINCE_CODE;
        case 8: // PROVINCE_NAME
          return PROVINCE_NAME;
        case 9: // CITY_CODE
          return CITY_CODE;
        case 10: // CITY_NAME
          return CITY_NAME;
        case 11: // DISTRICT_CODE
          return DISTRICT_CODE;
        case 12: // DISTRICT_NAME
          return DISTRICT_NAME;
        case 13: // CANTEEN_LIST
          return CANTEEN_LIST;
        case 14: // SELLER_LIST
          return SELLER_LIST;
        case 15: // STATUS
          return STATUS;
        case 16: // SCHOOL_PHOTO_JSONS
          return SCHOOL_PHOTO_JSONS;
        case 17: // CONTRACT_PHOTO_JSONS
          return CONTRACT_PHOTO_JSONS;
        case 18: // EXTRA_DATA1
          return EXTRA_DATA1;
        case 19: // EXTRA_DATA2
          return EXTRA_DATA2;
        case 20: // CREATE_TIME
          return CREATE_TIME;
        case 21: // UPDATE_TIME
          return UPDATE_TIME;
        case 22: // ONLINE_TIME
          return ONLINE_TIME;
        case 23: // OFFLINE_TIME
          return OFFLINE_TIME;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ID_ISSET_ID = 0;
  private static final int __PROVINCECODE_ISSET_ID = 1;
  private static final int __CITYCODE_ISSET_ID = 2;
  private static final int __DISTRICTCODE_ISSET_ID = 3;
  private static final int __CREATETIME_ISSET_ID = 4;
  private static final int __UPDATETIME_ISSET_ID = 5;
  private static final int __ONLINETIME_ISSET_ID = 6;
  private static final int __OFFLINETIME_ISSET_ID = 7;
  private BitSet __isset_bit_vector = new BitSet(8);

  public static final Map<_Fields, FieldMetaData> metaDataMap;
  static {
    Map<_Fields, FieldMetaData> tmpMap = new EnumMap<_Fields, FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new FieldMetaData("id", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.I64)));
    tmpMap.put(_Fields.SCHOOL_ID, new FieldMetaData("schoolId", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.SCHOOL_NAME, new FieldMetaData("schoolName", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.SCHOOL_ABBREVIATE, new FieldMetaData("schoolAbbreviate", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.SCHOOL_ADDRESS, new FieldMetaData("schoolAddress", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.SCHOOL_COORDINATE, new FieldMetaData("schoolCoordinate", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.PROVINCE_CODE, new FieldMetaData("provinceCode", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.I32)));
    tmpMap.put(_Fields.PROVINCE_NAME, new FieldMetaData("provinceName", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.CITY_CODE, new FieldMetaData("cityCode", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.I32)));
    tmpMap.put(_Fields.CITY_NAME, new FieldMetaData("cityName", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.DISTRICT_CODE, new FieldMetaData("districtCode", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.I32)));
    tmpMap.put(_Fields.DISTRICT_NAME, new FieldMetaData("districtName", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.CANTEEN_LIST, new FieldMetaData("canteenList", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.SELLER_LIST, new FieldMetaData("sellerList", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.STATUS, new FieldMetaData("status", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.SCHOOL_PHOTO_JSONS, new FieldMetaData("schoolPhotoJsons", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.CONTRACT_PHOTO_JSONS, new FieldMetaData("contractPhotoJsons", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.EXTRA_DATA1, new FieldMetaData("extraData1", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.EXTRA_DATA2, new FieldMetaData("extraData2", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.CREATE_TIME, new FieldMetaData("createTime", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.I64)));
    tmpMap.put(_Fields.UPDATE_TIME, new FieldMetaData("updateTime", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.I64)));
    tmpMap.put(_Fields.ONLINE_TIME, new FieldMetaData("onlineTime", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.I64)));
    tmpMap.put(_Fields.OFFLINE_TIME, new FieldMetaData("offlineTime", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.I64)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    FieldMetaData.addStructMetaDataMap(SchoolDetail.class, metaDataMap);
  }

  public SchoolDetail() {
  }

  public SchoolDetail(
    long id,
    String schoolId,
    String schoolName,
    String schoolAbbreviate,
    String schoolAddress,
    String schoolCoordinate,
    int provinceCode,
    String provinceName,
    int cityCode,
    String cityName,
    int districtCode,
    String districtName,
    String canteenList,
    String sellerList,
    String status,
    String schoolPhotoJsons,
    String contractPhotoJsons,
    String extraData1,
    String extraData2,
    long createTime,
    long updateTime,
    long onlineTime,
    long offlineTime)
  {
    this();
    this.id = id;
    setIdIsSet(true);
    this.schoolId = schoolId;
    this.schoolName = schoolName;
    this.schoolAbbreviate = schoolAbbreviate;
    this.schoolAddress = schoolAddress;
    this.schoolCoordinate = schoolCoordinate;
    this.provinceCode = provinceCode;
    setProvinceCodeIsSet(true);
    this.provinceName = provinceName;
    this.cityCode = cityCode;
    setCityCodeIsSet(true);
    this.cityName = cityName;
    this.districtCode = districtCode;
    setDistrictCodeIsSet(true);
    this.districtName = districtName;
    this.canteenList = canteenList;
    this.sellerList = sellerList;
    this.status = status;
    this.schoolPhotoJsons = schoolPhotoJsons;
    this.contractPhotoJsons = contractPhotoJsons;
    this.extraData1 = extraData1;
    this.extraData2 = extraData2;
    this.createTime = createTime;
    setCreateTimeIsSet(true);
    this.updateTime = updateTime;
    setUpdateTimeIsSet(true);
    this.onlineTime = onlineTime;
    setOnlineTimeIsSet(true);
    this.offlineTime = offlineTime;
    setOfflineTimeIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public SchoolDetail(SchoolDetail other) {
    __isset_bit_vector.clear();
    __isset_bit_vector.or(other.__isset_bit_vector);
    this.id = other.id;
    if (other.isSetSchoolId()) {
      this.schoolId = other.schoolId;
    }
    if (other.isSetSchoolName()) {
      this.schoolName = other.schoolName;
    }
    if (other.isSetSchoolAbbreviate()) {
      this.schoolAbbreviate = other.schoolAbbreviate;
    }
    if (other.isSetSchoolAddress()) {
      this.schoolAddress = other.schoolAddress;
    }
    if (other.isSetSchoolCoordinate()) {
      this.schoolCoordinate = other.schoolCoordinate;
    }
    this.provinceCode = other.provinceCode;
    if (other.isSetProvinceName()) {
      this.provinceName = other.provinceName;
    }
    this.cityCode = other.cityCode;
    if (other.isSetCityName()) {
      this.cityName = other.cityName;
    }
    this.districtCode = other.districtCode;
    if (other.isSetDistrictName()) {
      this.districtName = other.districtName;
    }
    if (other.isSetCanteenList()) {
      this.canteenList = other.canteenList;
    }
    if (other.isSetSellerList()) {
      this.sellerList = other.sellerList;
    }
    if (other.isSetStatus()) {
      this.status = other.status;
    }
    if (other.isSetSchoolPhotoJsons()) {
      this.schoolPhotoJsons = other.schoolPhotoJsons;
    }
    if (other.isSetContractPhotoJsons()) {
      this.contractPhotoJsons = other.contractPhotoJsons;
    }
    if (other.isSetExtraData1()) {
      this.extraData1 = other.extraData1;
    }
    if (other.isSetExtraData2()) {
      this.extraData2 = other.extraData2;
    }
    this.createTime = other.createTime;
    this.updateTime = other.updateTime;
    this.onlineTime = other.onlineTime;
    this.offlineTime = other.offlineTime;
  }

  public SchoolDetail deepCopy() {
    return new SchoolDetail(this);
  }

  @Override
  public void clear() {
    setIdIsSet(false);
    this.id = 0;
    this.schoolId = null;
    this.schoolName = null;
    this.schoolAbbreviate = null;
    this.schoolAddress = null;
    this.schoolCoordinate = null;
    setProvinceCodeIsSet(false);
    this.provinceCode = 0;
    this.provinceName = null;
    setCityCodeIsSet(false);
    this.cityCode = 0;
    this.cityName = null;
    setDistrictCodeIsSet(false);
    this.districtCode = 0;
    this.districtName = null;
    this.canteenList = null;
    this.sellerList = null;
    this.status = null;
    this.schoolPhotoJsons = null;
    this.contractPhotoJsons = null;
    this.extraData1 = null;
    this.extraData2 = null;
    setCreateTimeIsSet(false);
    this.createTime = 0;
    setUpdateTimeIsSet(false);
    this.updateTime = 0;
    setOnlineTimeIsSet(false);
    this.onlineTime = 0;
    setOfflineTimeIsSet(false);
    this.offlineTime = 0;
  }

  public long getId() {
    return this.id;
  }

  public SchoolDetail setId(long id) {
    this.id = id;
    setIdIsSet(true);
    return this;
  }

  public void unsetId() {
    __isset_bit_vector.clear(__ID_ISSET_ID);
  }

  /** Returns true if field id is set (has been asigned a value) and false otherwise */
  public boolean isSetId() {
    return __isset_bit_vector.get(__ID_ISSET_ID);
  }

  public void setIdIsSet(boolean value) {
    __isset_bit_vector.set(__ID_ISSET_ID, value);
  }

  public String getSchoolId() {
    return this.schoolId;
  }

  public SchoolDetail setSchoolId(String schoolId) {
    this.schoolId = schoolId;
    return this;
  }

  public void unsetSchoolId() {
    this.schoolId = null;
  }

  /** Returns true if field schoolId is set (has been asigned a value) and false otherwise */
  public boolean isSetSchoolId() {
    return this.schoolId != null;
  }

  public void setSchoolIdIsSet(boolean value) {
    if (!value) {
      this.schoolId = null;
    }
  }

  public String getSchoolName() {
    return this.schoolName;
  }

  public SchoolDetail setSchoolName(String schoolName) {
    this.schoolName = schoolName;
    return this;
  }

  public void unsetSchoolName() {
    this.schoolName = null;
  }

  /** Returns true if field schoolName is set (has been asigned a value) and false otherwise */
  public boolean isSetSchoolName() {
    return this.schoolName != null;
  }

  public void setSchoolNameIsSet(boolean value) {
    if (!value) {
      this.schoolName = null;
    }
  }

  public String getSchoolAbbreviate() {
    return this.schoolAbbreviate;
  }

  public SchoolDetail setSchoolAbbreviate(String schoolAbbreviate) {
    this.schoolAbbreviate = schoolAbbreviate;
    return this;
  }

  public void unsetSchoolAbbreviate() {
    this.schoolAbbreviate = null;
  }

  /** Returns true if field schoolAbbreviate is set (has been asigned a value) and false otherwise */
  public boolean isSetSchoolAbbreviate() {
    return this.schoolAbbreviate != null;
  }

  public void setSchoolAbbreviateIsSet(boolean value) {
    if (!value) {
      this.schoolAbbreviate = null;
    }
  }

  public String getSchoolAddress() {
    return this.schoolAddress;
  }

  public SchoolDetail setSchoolAddress(String schoolAddress) {
    this.schoolAddress = schoolAddress;
    return this;
  }

  public void unsetSchoolAddress() {
    this.schoolAddress = null;
  }

  /** Returns true if field schoolAddress is set (has been asigned a value) and false otherwise */
  public boolean isSetSchoolAddress() {
    return this.schoolAddress != null;
  }

  public void setSchoolAddressIsSet(boolean value) {
    if (!value) {
      this.schoolAddress = null;
    }
  }

  public String getSchoolCoordinate() {
    return this.schoolCoordinate;
  }

  public SchoolDetail setSchoolCoordinate(String schoolCoordinate) {
    this.schoolCoordinate = schoolCoordinate;
    return this;
  }

  public void unsetSchoolCoordinate() {
    this.schoolCoordinate = null;
  }

  /** Returns true if field schoolCoordinate is set (has been asigned a value) and false otherwise */
  public boolean isSetSchoolCoordinate() {
    return this.schoolCoordinate != null;
  }

  public void setSchoolCoordinateIsSet(boolean value) {
    if (!value) {
      this.schoolCoordinate = null;
    }
  }

  public int getProvinceCode() {
    return this.provinceCode;
  }

  public SchoolDetail setProvinceCode(int provinceCode) {
    this.provinceCode = provinceCode;
    setProvinceCodeIsSet(true);
    return this;
  }

  public void unsetProvinceCode() {
    __isset_bit_vector.clear(__PROVINCECODE_ISSET_ID);
  }

  /** Returns true if field provinceCode is set (has been asigned a value) and false otherwise */
  public boolean isSetProvinceCode() {
    return __isset_bit_vector.get(__PROVINCECODE_ISSET_ID);
  }

  public void setProvinceCodeIsSet(boolean value) {
    __isset_bit_vector.set(__PROVINCECODE_ISSET_ID, value);
  }

  public String getProvinceName() {
    return this.provinceName;
  }

  public SchoolDetail setProvinceName(String provinceName) {
    this.provinceName = provinceName;
    return this;
  }

  public void unsetProvinceName() {
    this.provinceName = null;
  }

  /** Returns true if field provinceName is set (has been asigned a value) and false otherwise */
  public boolean isSetProvinceName() {
    return this.provinceName != null;
  }

  public void setProvinceNameIsSet(boolean value) {
    if (!value) {
      this.provinceName = null;
    }
  }

  public int getCityCode() {
    return this.cityCode;
  }

  public SchoolDetail setCityCode(int cityCode) {
    this.cityCode = cityCode;
    setCityCodeIsSet(true);
    return this;
  }

  public void unsetCityCode() {
    __isset_bit_vector.clear(__CITYCODE_ISSET_ID);
  }

  /** Returns true if field cityCode is set (has been asigned a value) and false otherwise */
  public boolean isSetCityCode() {
    return __isset_bit_vector.get(__CITYCODE_ISSET_ID);
  }

  public void setCityCodeIsSet(boolean value) {
    __isset_bit_vector.set(__CITYCODE_ISSET_ID, value);
  }

  public String getCityName() {
    return this.cityName;
  }

  public SchoolDetail setCityName(String cityName) {
    this.cityName = cityName;
    return this;
  }

  public void unsetCityName() {
    this.cityName = null;
  }

  /** Returns true if field cityName is set (has been asigned a value) and false otherwise */
  public boolean isSetCityName() {
    return this.cityName != null;
  }

  public void setCityNameIsSet(boolean value) {
    if (!value) {
      this.cityName = null;
    }
  }

  public int getDistrictCode() {
    return this.districtCode;
  }

  public SchoolDetail setDistrictCode(int districtCode) {
    this.districtCode = districtCode;
    setDistrictCodeIsSet(true);
    return this;
  }

  public void unsetDistrictCode() {
    __isset_bit_vector.clear(__DISTRICTCODE_ISSET_ID);
  }

  /** Returns true if field districtCode is set (has been asigned a value) and false otherwise */
  public boolean isSetDistrictCode() {
    return __isset_bit_vector.get(__DISTRICTCODE_ISSET_ID);
  }

  public void setDistrictCodeIsSet(boolean value) {
    __isset_bit_vector.set(__DISTRICTCODE_ISSET_ID, value);
  }

  public String getDistrictName() {
    return this.districtName;
  }

  public SchoolDetail setDistrictName(String districtName) {
    this.districtName = districtName;
    return this;
  }

  public void unsetDistrictName() {
    this.districtName = null;
  }

  /** Returns true if field districtName is set (has been asigned a value) and false otherwise */
  public boolean isSetDistrictName() {
    return this.districtName != null;
  }

  public void setDistrictNameIsSet(boolean value) {
    if (!value) {
      this.districtName = null;
    }
  }

  public String getCanteenList() {
    return this.canteenList;
  }

  public SchoolDetail setCanteenList(String canteenList) {
    this.canteenList = canteenList;
    return this;
  }

  public void unsetCanteenList() {
    this.canteenList = null;
  }

  /** Returns true if field canteenList is set (has been asigned a value) and false otherwise */
  public boolean isSetCanteenList() {
    return this.canteenList != null;
  }

  public void setCanteenListIsSet(boolean value) {
    if (!value) {
      this.canteenList = null;
    }
  }

  public String getSellerList() {
    return this.sellerList;
  }

  public SchoolDetail setSellerList(String sellerList) {
    this.sellerList = sellerList;
    return this;
  }

  public void unsetSellerList() {
    this.sellerList = null;
  }

  /** Returns true if field sellerList is set (has been asigned a value) and false otherwise */
  public boolean isSetSellerList() {
    return this.sellerList != null;
  }

  public void setSellerListIsSet(boolean value) {
    if (!value) {
      this.sellerList = null;
    }
  }

  public String getStatus() {
    return this.status;
  }

  public SchoolDetail setStatus(String status) {
    this.status = status;
    return this;
  }

  public void unsetStatus() {
    this.status = null;
  }

  /** Returns true if field status is set (has been asigned a value) and false otherwise */
  public boolean isSetStatus() {
    return this.status != null;
  }

  public void setStatusIsSet(boolean value) {
    if (!value) {
      this.status = null;
    }
  }

  public String getSchoolPhotoJsons() {
    return this.schoolPhotoJsons;
  }

  public SchoolDetail setSchoolPhotoJsons(String schoolPhotoJsons) {
    this.schoolPhotoJsons = schoolPhotoJsons;
    return this;
  }

  public void unsetSchoolPhotoJsons() {
    this.schoolPhotoJsons = null;
  }

  /** Returns true if field schoolPhotoJsons is set (has been asigned a value) and false otherwise */
  public boolean isSetSchoolPhotoJsons() {
    return this.schoolPhotoJsons != null;
  }

  public void setSchoolPhotoJsonsIsSet(boolean value) {
    if (!value) {
      this.schoolPhotoJsons = null;
    }
  }

  public String getContractPhotoJsons() {
    return this.contractPhotoJsons;
  }

  public SchoolDetail setContractPhotoJsons(String contractPhotoJsons) {
    this.contractPhotoJsons = contractPhotoJsons;
    return this;
  }

  public void unsetContractPhotoJsons() {
    this.contractPhotoJsons = null;
  }

  /** Returns true if field contractPhotoJsons is set (has been asigned a value) and false otherwise */
  public boolean isSetContractPhotoJsons() {
    return this.contractPhotoJsons != null;
  }

  public void setContractPhotoJsonsIsSet(boolean value) {
    if (!value) {
      this.contractPhotoJsons = null;
    }
  }

  public String getExtraData1() {
    return this.extraData1;
  }

  public SchoolDetail setExtraData1(String extraData1) {
    this.extraData1 = extraData1;
    return this;
  }

  public void unsetExtraData1() {
    this.extraData1 = null;
  }

  /** Returns true if field extraData1 is set (has been asigned a value) and false otherwise */
  public boolean isSetExtraData1() {
    return this.extraData1 != null;
  }

  public void setExtraData1IsSet(boolean value) {
    if (!value) {
      this.extraData1 = null;
    }
  }

  public String getExtraData2() {
    return this.extraData2;
  }

  public SchoolDetail setExtraData2(String extraData2) {
    this.extraData2 = extraData2;
    return this;
  }

  public void unsetExtraData2() {
    this.extraData2 = null;
  }

  /** Returns true if field extraData2 is set (has been asigned a value) and false otherwise */
  public boolean isSetExtraData2() {
    return this.extraData2 != null;
  }

  public void setExtraData2IsSet(boolean value) {
    if (!value) {
      this.extraData2 = null;
    }
  }

  public long getCreateTime() {
    return this.createTime;
  }

  public SchoolDetail setCreateTime(long createTime) {
    this.createTime = createTime;
    setCreateTimeIsSet(true);
    return this;
  }

  public void unsetCreateTime() {
    __isset_bit_vector.clear(__CREATETIME_ISSET_ID);
  }

  /** Returns true if field createTime is set (has been asigned a value) and false otherwise */
  public boolean isSetCreateTime() {
    return __isset_bit_vector.get(__CREATETIME_ISSET_ID);
  }

  public void setCreateTimeIsSet(boolean value) {
    __isset_bit_vector.set(__CREATETIME_ISSET_ID, value);
  }

  public long getUpdateTime() {
    return this.updateTime;
  }

  public SchoolDetail setUpdateTime(long updateTime) {
    this.updateTime = updateTime;
    setUpdateTimeIsSet(true);
    return this;
  }

  public void unsetUpdateTime() {
    __isset_bit_vector.clear(__UPDATETIME_ISSET_ID);
  }

  /** Returns true if field updateTime is set (has been asigned a value) and false otherwise */
  public boolean isSetUpdateTime() {
    return __isset_bit_vector.get(__UPDATETIME_ISSET_ID);
  }

  public void setUpdateTimeIsSet(boolean value) {
    __isset_bit_vector.set(__UPDATETIME_ISSET_ID, value);
  }

  public long getOnlineTime() {
    return this.onlineTime;
  }

  public SchoolDetail setOnlineTime(long onlineTime) {
    this.onlineTime = onlineTime;
    setOnlineTimeIsSet(true);
    return this;
  }

  public void unsetOnlineTime() {
    __isset_bit_vector.clear(__ONLINETIME_ISSET_ID);
  }

  /** Returns true if field onlineTime is set (has been asigned a value) and false otherwise */
  public boolean isSetOnlineTime() {
    return __isset_bit_vector.get(__ONLINETIME_ISSET_ID);
  }

  public void setOnlineTimeIsSet(boolean value) {
    __isset_bit_vector.set(__ONLINETIME_ISSET_ID, value);
  }

  public long getOfflineTime() {
    return this.offlineTime;
  }

  public SchoolDetail setOfflineTime(long offlineTime) {
    this.offlineTime = offlineTime;
    setOfflineTimeIsSet(true);
    return this;
  }

  public void unsetOfflineTime() {
    __isset_bit_vector.clear(__OFFLINETIME_ISSET_ID);
  }

  /** Returns true if field offlineTime is set (has been asigned a value) and false otherwise */
  public boolean isSetOfflineTime() {
    return __isset_bit_vector.get(__OFFLINETIME_ISSET_ID);
  }

  public void setOfflineTimeIsSet(boolean value) {
    __isset_bit_vector.set(__OFFLINETIME_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((Long)value);
      }
      break;

    case SCHOOL_ID:
      if (value == null) {
        unsetSchoolId();
      } else {
        setSchoolId((String)value);
      }
      break;

    case SCHOOL_NAME:
      if (value == null) {
        unsetSchoolName();
      } else {
        setSchoolName((String)value);
      }
      break;

    case SCHOOL_ABBREVIATE:
      if (value == null) {
        unsetSchoolAbbreviate();
      } else {
        setSchoolAbbreviate((String)value);
      }
      break;

    case SCHOOL_ADDRESS:
      if (value == null) {
        unsetSchoolAddress();
      } else {
        setSchoolAddress((String)value);
      }
      break;

    case SCHOOL_COORDINATE:
      if (value == null) {
        unsetSchoolCoordinate();
      } else {
        setSchoolCoordinate((String)value);
      }
      break;

    case PROVINCE_CODE:
      if (value == null) {
        unsetProvinceCode();
      } else {
        setProvinceCode((Integer)value);
      }
      break;

    case PROVINCE_NAME:
      if (value == null) {
        unsetProvinceName();
      } else {
        setProvinceName((String)value);
      }
      break;

    case CITY_CODE:
      if (value == null) {
        unsetCityCode();
      } else {
        setCityCode((Integer)value);
      }
      break;

    case CITY_NAME:
      if (value == null) {
        unsetCityName();
      } else {
        setCityName((String)value);
      }
      break;

    case DISTRICT_CODE:
      if (value == null) {
        unsetDistrictCode();
      } else {
        setDistrictCode((Integer)value);
      }
      break;

    case DISTRICT_NAME:
      if (value == null) {
        unsetDistrictName();
      } else {
        setDistrictName((String)value);
      }
      break;

    case CANTEEN_LIST:
      if (value == null) {
        unsetCanteenList();
      } else {
        setCanteenList((String)value);
      }
      break;

    case SELLER_LIST:
      if (value == null) {
        unsetSellerList();
      } else {
        setSellerList((String)value);
      }
      break;

    case STATUS:
      if (value == null) {
        unsetStatus();
      } else {
        setStatus((String)value);
      }
      break;

    case SCHOOL_PHOTO_JSONS:
      if (value == null) {
        unsetSchoolPhotoJsons();
      } else {
        setSchoolPhotoJsons((String)value);
      }
      break;

    case CONTRACT_PHOTO_JSONS:
      if (value == null) {
        unsetContractPhotoJsons();
      } else {
        setContractPhotoJsons((String)value);
      }
      break;

    case EXTRA_DATA1:
      if (value == null) {
        unsetExtraData1();
      } else {
        setExtraData1((String)value);
      }
      break;

    case EXTRA_DATA2:
      if (value == null) {
        unsetExtraData2();
      } else {
        setExtraData2((String)value);
      }
      break;

    case CREATE_TIME:
      if (value == null) {
        unsetCreateTime();
      } else {
        setCreateTime((Long)value);
      }
      break;

    case UPDATE_TIME:
      if (value == null) {
        unsetUpdateTime();
      } else {
        setUpdateTime((Long)value);
      }
      break;

    case ONLINE_TIME:
      if (value == null) {
        unsetOnlineTime();
      } else {
        setOnlineTime((Long)value);
      }
      break;

    case OFFLINE_TIME:
      if (value == null) {
        unsetOfflineTime();
      } else {
        setOfflineTime((Long)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return new Long(getId());

    case SCHOOL_ID:
      return getSchoolId();

    case SCHOOL_NAME:
      return getSchoolName();

    case SCHOOL_ABBREVIATE:
      return getSchoolAbbreviate();

    case SCHOOL_ADDRESS:
      return getSchoolAddress();

    case SCHOOL_COORDINATE:
      return getSchoolCoordinate();

    case PROVINCE_CODE:
      return new Integer(getProvinceCode());

    case PROVINCE_NAME:
      return getProvinceName();

    case CITY_CODE:
      return new Integer(getCityCode());

    case CITY_NAME:
      return getCityName();

    case DISTRICT_CODE:
      return new Integer(getDistrictCode());

    case DISTRICT_NAME:
      return getDistrictName();

    case CANTEEN_LIST:
      return getCanteenList();

    case SELLER_LIST:
      return getSellerList();

    case STATUS:
      return getStatus();

    case SCHOOL_PHOTO_JSONS:
      return getSchoolPhotoJsons();

    case CONTRACT_PHOTO_JSONS:
      return getContractPhotoJsons();

    case EXTRA_DATA1:
      return getExtraData1();

    case EXTRA_DATA2:
      return getExtraData2();

    case CREATE_TIME:
      return new Long(getCreateTime());

    case UPDATE_TIME:
      return new Long(getUpdateTime());

    case ONLINE_TIME:
      return new Long(getOnlineTime());

    case OFFLINE_TIME:
      return new Long(getOfflineTime());

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been asigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case SCHOOL_ID:
      return isSetSchoolId();
    case SCHOOL_NAME:
      return isSetSchoolName();
    case SCHOOL_ABBREVIATE:
      return isSetSchoolAbbreviate();
    case SCHOOL_ADDRESS:
      return isSetSchoolAddress();
    case SCHOOL_COORDINATE:
      return isSetSchoolCoordinate();
    case PROVINCE_CODE:
      return isSetProvinceCode();
    case PROVINCE_NAME:
      return isSetProvinceName();
    case CITY_CODE:
      return isSetCityCode();
    case CITY_NAME:
      return isSetCityName();
    case DISTRICT_CODE:
      return isSetDistrictCode();
    case DISTRICT_NAME:
      return isSetDistrictName();
    case CANTEEN_LIST:
      return isSetCanteenList();
    case SELLER_LIST:
      return isSetSellerList();
    case STATUS:
      return isSetStatus();
    case SCHOOL_PHOTO_JSONS:
      return isSetSchoolPhotoJsons();
    case CONTRACT_PHOTO_JSONS:
      return isSetContractPhotoJsons();
    case EXTRA_DATA1:
      return isSetExtraData1();
    case EXTRA_DATA2:
      return isSetExtraData2();
    case CREATE_TIME:
      return isSetCreateTime();
    case UPDATE_TIME:
      return isSetUpdateTime();
    case ONLINE_TIME:
      return isSetOnlineTime();
    case OFFLINE_TIME:
      return isSetOfflineTime();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof SchoolDetail)
      return this.equals((SchoolDetail)that);
    return false;
  }

  public boolean equals(SchoolDetail that) {
    if (that == null)
      return false;

    boolean this_present_id = true;
    boolean that_present_id = true;
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (this.id != that.id)
        return false;
    }

    boolean this_present_schoolId = true && this.isSetSchoolId();
    boolean that_present_schoolId = true && that.isSetSchoolId();
    if (this_present_schoolId || that_present_schoolId) {
      if (!(this_present_schoolId && that_present_schoolId))
        return false;
      if (!this.schoolId.equals(that.schoolId))
        return false;
    }

    boolean this_present_schoolName = true && this.isSetSchoolName();
    boolean that_present_schoolName = true && that.isSetSchoolName();
    if (this_present_schoolName || that_present_schoolName) {
      if (!(this_present_schoolName && that_present_schoolName))
        return false;
      if (!this.schoolName.equals(that.schoolName))
        return false;
    }

    boolean this_present_schoolAbbreviate = true && this.isSetSchoolAbbreviate();
    boolean that_present_schoolAbbreviate = true && that.isSetSchoolAbbreviate();
    if (this_present_schoolAbbreviate || that_present_schoolAbbreviate) {
      if (!(this_present_schoolAbbreviate && that_present_schoolAbbreviate))
        return false;
      if (!this.schoolAbbreviate.equals(that.schoolAbbreviate))
        return false;
    }

    boolean this_present_schoolAddress = true && this.isSetSchoolAddress();
    boolean that_present_schoolAddress = true && that.isSetSchoolAddress();
    if (this_present_schoolAddress || that_present_schoolAddress) {
      if (!(this_present_schoolAddress && that_present_schoolAddress))
        return false;
      if (!this.schoolAddress.equals(that.schoolAddress))
        return false;
    }

    boolean this_present_schoolCoordinate = true && this.isSetSchoolCoordinate();
    boolean that_present_schoolCoordinate = true && that.isSetSchoolCoordinate();
    if (this_present_schoolCoordinate || that_present_schoolCoordinate) {
      if (!(this_present_schoolCoordinate && that_present_schoolCoordinate))
        return false;
      if (!this.schoolCoordinate.equals(that.schoolCoordinate))
        return false;
    }

    boolean this_present_provinceCode = true;
    boolean that_present_provinceCode = true;
    if (this_present_provinceCode || that_present_provinceCode) {
      if (!(this_present_provinceCode && that_present_provinceCode))
        return false;
      if (this.provinceCode != that.provinceCode)
        return false;
    }

    boolean this_present_provinceName = true && this.isSetProvinceName();
    boolean that_present_provinceName = true && that.isSetProvinceName();
    if (this_present_provinceName || that_present_provinceName) {
      if (!(this_present_provinceName && that_present_provinceName))
        return false;
      if (!this.provinceName.equals(that.provinceName))
        return false;
    }

    boolean this_present_cityCode = true;
    boolean that_present_cityCode = true;
    if (this_present_cityCode || that_present_cityCode) {
      if (!(this_present_cityCode && that_present_cityCode))
        return false;
      if (this.cityCode != that.cityCode)
        return false;
    }

    boolean this_present_cityName = true && this.isSetCityName();
    boolean that_present_cityName = true && that.isSetCityName();
    if (this_present_cityName || that_present_cityName) {
      if (!(this_present_cityName && that_present_cityName))
        return false;
      if (!this.cityName.equals(that.cityName))
        return false;
    }

    boolean this_present_districtCode = true;
    boolean that_present_districtCode = true;
    if (this_present_districtCode || that_present_districtCode) {
      if (!(this_present_districtCode && that_present_districtCode))
        return false;
      if (this.districtCode != that.districtCode)
        return false;
    }

    boolean this_present_districtName = true && this.isSetDistrictName();
    boolean that_present_districtName = true && that.isSetDistrictName();
    if (this_present_districtName || that_present_districtName) {
      if (!(this_present_districtName && that_present_districtName))
        return false;
      if (!this.districtName.equals(that.districtName))
        return false;
    }

    boolean this_present_canteenList = true && this.isSetCanteenList();
    boolean that_present_canteenList = true && that.isSetCanteenList();
    if (this_present_canteenList || that_present_canteenList) {
      if (!(this_present_canteenList && that_present_canteenList))
        return false;
      if (!this.canteenList.equals(that.canteenList))
        return false;
    }

    boolean this_present_sellerList = true && this.isSetSellerList();
    boolean that_present_sellerList = true && that.isSetSellerList();
    if (this_present_sellerList || that_present_sellerList) {
      if (!(this_present_sellerList && that_present_sellerList))
        return false;
      if (!this.sellerList.equals(that.sellerList))
        return false;
    }

    boolean this_present_status = true && this.isSetStatus();
    boolean that_present_status = true && that.isSetStatus();
    if (this_present_status || that_present_status) {
      if (!(this_present_status && that_present_status))
        return false;
      if (!this.status.equals(that.status))
        return false;
    }

    boolean this_present_schoolPhotoJsons = true && this.isSetSchoolPhotoJsons();
    boolean that_present_schoolPhotoJsons = true && that.isSetSchoolPhotoJsons();
    if (this_present_schoolPhotoJsons || that_present_schoolPhotoJsons) {
      if (!(this_present_schoolPhotoJsons && that_present_schoolPhotoJsons))
        return false;
      if (!this.schoolPhotoJsons.equals(that.schoolPhotoJsons))
        return false;
    }

    boolean this_present_contractPhotoJsons = true && this.isSetContractPhotoJsons();
    boolean that_present_contractPhotoJsons = true && that.isSetContractPhotoJsons();
    if (this_present_contractPhotoJsons || that_present_contractPhotoJsons) {
      if (!(this_present_contractPhotoJsons && that_present_contractPhotoJsons))
        return false;
      if (!this.contractPhotoJsons.equals(that.contractPhotoJsons))
        return false;
    }

    boolean this_present_extraData1 = true && this.isSetExtraData1();
    boolean that_present_extraData1 = true && that.isSetExtraData1();
    if (this_present_extraData1 || that_present_extraData1) {
      if (!(this_present_extraData1 && that_present_extraData1))
        return false;
      if (!this.extraData1.equals(that.extraData1))
        return false;
    }

    boolean this_present_extraData2 = true && this.isSetExtraData2();
    boolean that_present_extraData2 = true && that.isSetExtraData2();
    if (this_present_extraData2 || that_present_extraData2) {
      if (!(this_present_extraData2 && that_present_extraData2))
        return false;
      if (!this.extraData2.equals(that.extraData2))
        return false;
    }

    boolean this_present_createTime = true;
    boolean that_present_createTime = true;
    if (this_present_createTime || that_present_createTime) {
      if (!(this_present_createTime && that_present_createTime))
        return false;
      if (this.createTime != that.createTime)
        return false;
    }

    boolean this_present_updateTime = true;
    boolean that_present_updateTime = true;
    if (this_present_updateTime || that_present_updateTime) {
      if (!(this_present_updateTime && that_present_updateTime))
        return false;
      if (this.updateTime != that.updateTime)
        return false;
    }

    boolean this_present_onlineTime = true;
    boolean that_present_onlineTime = true;
    if (this_present_onlineTime || that_present_onlineTime) {
      if (!(this_present_onlineTime && that_present_onlineTime))
        return false;
      if (this.onlineTime != that.onlineTime)
        return false;
    }

    boolean this_present_offlineTime = true;
    boolean that_present_offlineTime = true;
    if (this_present_offlineTime || that_present_offlineTime) {
      if (!(this_present_offlineTime && that_present_offlineTime))
        return false;
      if (this.offlineTime != that.offlineTime)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  public int compareTo(SchoolDetail other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;
    SchoolDetail typedOther = (SchoolDetail)other;

    lastComparison = Boolean.valueOf(isSetId()).compareTo(typedOther.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = TBaseHelper.compareTo(this.id, typedOther.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSchoolId()).compareTo(typedOther.isSetSchoolId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSchoolId()) {
      lastComparison = TBaseHelper.compareTo(this.schoolId, typedOther.schoolId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSchoolName()).compareTo(typedOther.isSetSchoolName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSchoolName()) {
      lastComparison = TBaseHelper.compareTo(this.schoolName, typedOther.schoolName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSchoolAbbreviate()).compareTo(typedOther.isSetSchoolAbbreviate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSchoolAbbreviate()) {
      lastComparison = TBaseHelper.compareTo(this.schoolAbbreviate, typedOther.schoolAbbreviate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSchoolAddress()).compareTo(typedOther.isSetSchoolAddress());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSchoolAddress()) {
      lastComparison = TBaseHelper.compareTo(this.schoolAddress, typedOther.schoolAddress);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSchoolCoordinate()).compareTo(typedOther.isSetSchoolCoordinate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSchoolCoordinate()) {
      lastComparison = TBaseHelper.compareTo(this.schoolCoordinate, typedOther.schoolCoordinate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProvinceCode()).compareTo(typedOther.isSetProvinceCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProvinceCode()) {
      lastComparison = TBaseHelper.compareTo(this.provinceCode, typedOther.provinceCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProvinceName()).compareTo(typedOther.isSetProvinceName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProvinceName()) {
      lastComparison = TBaseHelper.compareTo(this.provinceName, typedOther.provinceName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCityCode()).compareTo(typedOther.isSetCityCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCityCode()) {
      lastComparison = TBaseHelper.compareTo(this.cityCode, typedOther.cityCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCityName()).compareTo(typedOther.isSetCityName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCityName()) {
      lastComparison = TBaseHelper.compareTo(this.cityName, typedOther.cityName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDistrictCode()).compareTo(typedOther.isSetDistrictCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDistrictCode()) {
      lastComparison = TBaseHelper.compareTo(this.districtCode, typedOther.districtCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDistrictName()).compareTo(typedOther.isSetDistrictName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDistrictName()) {
      lastComparison = TBaseHelper.compareTo(this.districtName, typedOther.districtName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCanteenList()).compareTo(typedOther.isSetCanteenList());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCanteenList()) {
      lastComparison = TBaseHelper.compareTo(this.canteenList, typedOther.canteenList);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSellerList()).compareTo(typedOther.isSetSellerList());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSellerList()) {
      lastComparison = TBaseHelper.compareTo(this.sellerList, typedOther.sellerList);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStatus()).compareTo(typedOther.isSetStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStatus()) {
      lastComparison = TBaseHelper.compareTo(this.status, typedOther.status);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSchoolPhotoJsons()).compareTo(typedOther.isSetSchoolPhotoJsons());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSchoolPhotoJsons()) {
      lastComparison = TBaseHelper.compareTo(this.schoolPhotoJsons, typedOther.schoolPhotoJsons);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetContractPhotoJsons()).compareTo(typedOther.isSetContractPhotoJsons());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetContractPhotoJsons()) {
      lastComparison = TBaseHelper.compareTo(this.contractPhotoJsons, typedOther.contractPhotoJsons);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetExtraData1()).compareTo(typedOther.isSetExtraData1());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetExtraData1()) {
      lastComparison = TBaseHelper.compareTo(this.extraData1, typedOther.extraData1);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetExtraData2()).compareTo(typedOther.isSetExtraData2());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetExtraData2()) {
      lastComparison = TBaseHelper.compareTo(this.extraData2, typedOther.extraData2);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreateTime()).compareTo(typedOther.isSetCreateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateTime()) {
      lastComparison = TBaseHelper.compareTo(this.createTime, typedOther.createTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUpdateTime()).compareTo(typedOther.isSetUpdateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUpdateTime()) {
      lastComparison = TBaseHelper.compareTo(this.updateTime, typedOther.updateTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOnlineTime()).compareTo(typedOther.isSetOnlineTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOnlineTime()) {
      lastComparison = TBaseHelper.compareTo(this.onlineTime, typedOther.onlineTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOfflineTime()).compareTo(typedOther.isSetOfflineTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOfflineTime()) {
      lastComparison = TBaseHelper.compareTo(this.offlineTime, typedOther.offlineTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(TProtocol iprot) throws TException {
    TField field;
    iprot.readStructBegin();
    while (true)
    {
      field = iprot.readFieldBegin();
      if (field.type == TType.STOP) { 
        break;
      }
      switch (field.id) {
        case 1: // ID
          if (field.type == TType.I64) {
            this.id = iprot.readI64();
            setIdIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 2: // SCHOOL_ID
          if (field.type == TType.STRING) {
            this.schoolId = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 3: // SCHOOL_NAME
          if (field.type == TType.STRING) {
            this.schoolName = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 4: // SCHOOL_ABBREVIATE
          if (field.type == TType.STRING) {
            this.schoolAbbreviate = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 5: // SCHOOL_ADDRESS
          if (field.type == TType.STRING) {
            this.schoolAddress = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 6: // SCHOOL_COORDINATE
          if (field.type == TType.STRING) {
            this.schoolCoordinate = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 7: // PROVINCE_CODE
          if (field.type == TType.I32) {
            this.provinceCode = iprot.readI32();
            setProvinceCodeIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 8: // PROVINCE_NAME
          if (field.type == TType.STRING) {
            this.provinceName = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 9: // CITY_CODE
          if (field.type == TType.I32) {
            this.cityCode = iprot.readI32();
            setCityCodeIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 10: // CITY_NAME
          if (field.type == TType.STRING) {
            this.cityName = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 11: // DISTRICT_CODE
          if (field.type == TType.I32) {
            this.districtCode = iprot.readI32();
            setDistrictCodeIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 12: // DISTRICT_NAME
          if (field.type == TType.STRING) {
            this.districtName = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 13: // CANTEEN_LIST
          if (field.type == TType.STRING) {
            this.canteenList = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 14: // SELLER_LIST
          if (field.type == TType.STRING) {
            this.sellerList = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 15: // STATUS
          if (field.type == TType.STRING) {
            this.status = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 16: // SCHOOL_PHOTO_JSONS
          if (field.type == TType.STRING) {
            this.schoolPhotoJsons = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 17: // CONTRACT_PHOTO_JSONS
          if (field.type == TType.STRING) {
            this.contractPhotoJsons = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 18: // EXTRA_DATA1
          if (field.type == TType.STRING) {
            this.extraData1 = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 19: // EXTRA_DATA2
          if (field.type == TType.STRING) {
            this.extraData2 = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 20: // CREATE_TIME
          if (field.type == TType.I64) {
            this.createTime = iprot.readI64();
            setCreateTimeIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 21: // UPDATE_TIME
          if (field.type == TType.I64) {
            this.updateTime = iprot.readI64();
            setUpdateTimeIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 22: // ONLINE_TIME
          if (field.type == TType.I64) {
            this.onlineTime = iprot.readI64();
            setOnlineTimeIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 23: // OFFLINE_TIME
          if (field.type == TType.I64) {
            this.offlineTime = iprot.readI64();
            setOfflineTimeIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        default:
          TProtocolUtil.skip(iprot, field.type);
      }
      iprot.readFieldEnd();
    }
    iprot.readStructEnd();

    // check for required fields of primitive type, which can't be checked in the validate method
    validate();
  }

  public void write(TProtocol oprot) throws TException {
    validate();

    oprot.writeStructBegin(STRUCT_DESC);
    oprot.writeFieldBegin(ID_FIELD_DESC);
    oprot.writeI64(this.id);
    oprot.writeFieldEnd();
    if (this.schoolId != null) {
      oprot.writeFieldBegin(SCHOOL_ID_FIELD_DESC);
      oprot.writeString(this.schoolId);
      oprot.writeFieldEnd();
    }
    if (this.schoolName != null) {
      oprot.writeFieldBegin(SCHOOL_NAME_FIELD_DESC);
      oprot.writeString(this.schoolName);
      oprot.writeFieldEnd();
    }
    if (this.schoolAbbreviate != null) {
      oprot.writeFieldBegin(SCHOOL_ABBREVIATE_FIELD_DESC);
      oprot.writeString(this.schoolAbbreviate);
      oprot.writeFieldEnd();
    }
    if (this.schoolAddress != null) {
      oprot.writeFieldBegin(SCHOOL_ADDRESS_FIELD_DESC);
      oprot.writeString(this.schoolAddress);
      oprot.writeFieldEnd();
    }
    if (this.schoolCoordinate != null) {
      oprot.writeFieldBegin(SCHOOL_COORDINATE_FIELD_DESC);
      oprot.writeString(this.schoolCoordinate);
      oprot.writeFieldEnd();
    }
    oprot.writeFieldBegin(PROVINCE_CODE_FIELD_DESC);
    oprot.writeI32(this.provinceCode);
    oprot.writeFieldEnd();
    if (this.provinceName != null) {
      oprot.writeFieldBegin(PROVINCE_NAME_FIELD_DESC);
      oprot.writeString(this.provinceName);
      oprot.writeFieldEnd();
    }
    oprot.writeFieldBegin(CITY_CODE_FIELD_DESC);
    oprot.writeI32(this.cityCode);
    oprot.writeFieldEnd();
    if (this.cityName != null) {
      oprot.writeFieldBegin(CITY_NAME_FIELD_DESC);
      oprot.writeString(this.cityName);
      oprot.writeFieldEnd();
    }
    oprot.writeFieldBegin(DISTRICT_CODE_FIELD_DESC);
    oprot.writeI32(this.districtCode);
    oprot.writeFieldEnd();
    if (this.districtName != null) {
      oprot.writeFieldBegin(DISTRICT_NAME_FIELD_DESC);
      oprot.writeString(this.districtName);
      oprot.writeFieldEnd();
    }
    if (this.canteenList != null) {
      oprot.writeFieldBegin(CANTEEN_LIST_FIELD_DESC);
      oprot.writeString(this.canteenList);
      oprot.writeFieldEnd();
    }
    if (this.sellerList != null) {
      oprot.writeFieldBegin(SELLER_LIST_FIELD_DESC);
      oprot.writeString(this.sellerList);
      oprot.writeFieldEnd();
    }
    if (this.status != null) {
      oprot.writeFieldBegin(STATUS_FIELD_DESC);
      oprot.writeString(this.status);
      oprot.writeFieldEnd();
    }
    if (this.schoolPhotoJsons != null) {
      oprot.writeFieldBegin(SCHOOL_PHOTO_JSONS_FIELD_DESC);
      oprot.writeString(this.schoolPhotoJsons);
      oprot.writeFieldEnd();
    }
    if (this.contractPhotoJsons != null) {
      oprot.writeFieldBegin(CONTRACT_PHOTO_JSONS_FIELD_DESC);
      oprot.writeString(this.contractPhotoJsons);
      oprot.writeFieldEnd();
    }
    if (this.extraData1 != null) {
      oprot.writeFieldBegin(EXTRA_DATA1_FIELD_DESC);
      oprot.writeString(this.extraData1);
      oprot.writeFieldEnd();
    }
    if (this.extraData2 != null) {
      oprot.writeFieldBegin(EXTRA_DATA2_FIELD_DESC);
      oprot.writeString(this.extraData2);
      oprot.writeFieldEnd();
    }
    oprot.writeFieldBegin(CREATE_TIME_FIELD_DESC);
    oprot.writeI64(this.createTime);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(UPDATE_TIME_FIELD_DESC);
    oprot.writeI64(this.updateTime);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(ONLINE_TIME_FIELD_DESC);
    oprot.writeI64(this.onlineTime);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(OFFLINE_TIME_FIELD_DESC);
    oprot.writeI64(this.offlineTime);
    oprot.writeFieldEnd();
    oprot.writeFieldStop();
    oprot.writeStructEnd();
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("SchoolDetail(");
    boolean first = true;

    sb.append("id:");
    sb.append(this.id);
    first = false;
    if (!first) sb.append(", ");
    sb.append("schoolId:");
    if (this.schoolId == null) {
      sb.append("null");
    } else {
      sb.append(this.schoolId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("schoolName:");
    if (this.schoolName == null) {
      sb.append("null");
    } else {
      sb.append(this.schoolName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("schoolAbbreviate:");
    if (this.schoolAbbreviate == null) {
      sb.append("null");
    } else {
      sb.append(this.schoolAbbreviate);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("schoolAddress:");
    if (this.schoolAddress == null) {
      sb.append("null");
    } else {
      sb.append(this.schoolAddress);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("schoolCoordinate:");
    if (this.schoolCoordinate == null) {
      sb.append("null");
    } else {
      sb.append(this.schoolCoordinate);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("provinceCode:");
    sb.append(this.provinceCode);
    first = false;
    if (!first) sb.append(", ");
    sb.append("provinceName:");
    if (this.provinceName == null) {
      sb.append("null");
    } else {
      sb.append(this.provinceName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("cityCode:");
    sb.append(this.cityCode);
    first = false;
    if (!first) sb.append(", ");
    sb.append("cityName:");
    if (this.cityName == null) {
      sb.append("null");
    } else {
      sb.append(this.cityName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("districtCode:");
    sb.append(this.districtCode);
    first = false;
    if (!first) sb.append(", ");
    sb.append("districtName:");
    if (this.districtName == null) {
      sb.append("null");
    } else {
      sb.append(this.districtName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("canteenList:");
    if (this.canteenList == null) {
      sb.append("null");
    } else {
      sb.append(this.canteenList);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("sellerList:");
    if (this.sellerList == null) {
      sb.append("null");
    } else {
      sb.append(this.sellerList);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("status:");
    if (this.status == null) {
      sb.append("null");
    } else {
      sb.append(this.status);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("schoolPhotoJsons:");
    if (this.schoolPhotoJsons == null) {
      sb.append("null");
    } else {
      sb.append(this.schoolPhotoJsons);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("contractPhotoJsons:");
    if (this.contractPhotoJsons == null) {
      sb.append("null");
    } else {
      sb.append(this.contractPhotoJsons);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("extraData1:");
    if (this.extraData1 == null) {
      sb.append("null");
    } else {
      sb.append(this.extraData1);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("extraData2:");
    if (this.extraData2 == null) {
      sb.append("null");
    } else {
      sb.append(this.extraData2);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("createTime:");
    sb.append(this.createTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("updateTime:");
    sb.append(this.updateTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("onlineTime:");
    sb.append(this.onlineTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("offlineTime:");
    sb.append(this.offlineTime);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws TException {
    // check for required fields
  }

}

