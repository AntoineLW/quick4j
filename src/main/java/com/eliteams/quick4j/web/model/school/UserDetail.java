/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */
package com.eliteams.quick4j.web.model.school;

import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import org.apache.thrift.*;
import org.apache.thrift.async.*;
import org.apache.thrift.meta_data.*;
import org.apache.thrift.transport.*;
import org.apache.thrift.protocol.*;

public class UserDetail implements TBase<UserDetail, UserDetail._Fields>, java.io.Serializable, Cloneable {
  private static final TStruct STRUCT_DESC = new TStruct("UserDetail");

  private static final TField ID_FIELD_DESC = new TField("id", TType.I64, (short)1);
  private static final TField USER_ID_FIELD_DESC = new TField("userId", TType.STRING, (short)2);
  private static final TField LOGIN_TYPE_FIELD_DESC = new TField("loginType", TType.STRING, (short)3);
  private static final TField LOGIN_ID_FIELD_DESC = new TField("loginId", TType.STRING, (short)4);
  private static final TField LOGIN_PASS_FIELD_DESC = new TField("loginPass", TType.STRING, (short)5);
  private static final TField LOGIN_PASS_ENCRYPT_FIELD_DESC = new TField("loginPassEncrypt", TType.STRING, (short)6);
  private static final TField PHONE_NUMBER_FIELD_DESC = new TField("phoneNumber", TType.STRING, (short)7);
  private static final TField STATUS_FIELD_DESC = new TField("status", TType.STRING, (short)8);
  private static final TField ADDRESS_LIST_FIELD_DESC = new TField("addressList", TType.STRING, (short)9);
  private static final TField ADDRESS_LIST_ENCRYPT_FIELD_DESC = new TField("addressListEncrypt", TType.STRING, (short)10);
  private static final TField PRIMARY_ADDRESS_FIELD_DESC = new TField("primaryAddress", TType.STRING, (short)11);
  private static final TField PRIMARY_ADDRESS_ENCRYPT_FIELD_DESC = new TField("primaryAddressEncrypt", TType.STRING, (short)12);
  private static final TField SHOPPING_CART_FIELD_DESC = new TField("shoppingCart", TType.STRING, (short)13);
  private static final TField SHOPPING_CART_ENCRYPT_FIELD_DESC = new TField("shoppingCartEncrypt", TType.STRING, (short)14);
  private static final TField EXTRA_DATA1_FIELD_DESC = new TField("extraData1", TType.STRING, (short)15);
  private static final TField EXTRA_DATA2_FIELD_DESC = new TField("extraData2", TType.STRING, (short)16);
  private static final TField CREATE_TIME_FIELD_DESC = new TField("createTime", TType.I64, (short)17);
  private static final TField UPDATE_TIME_FIELD_DESC = new TField("updateTime", TType.I64, (short)18);
  private static final TField REGISTER_TIME_FIELD_DESC = new TField("registerTime", TType.I64, (short)19);
  private static final TField LAST_LOGIN_TIME_FIELD_DESC = new TField("lastLoginTime", TType.I64, (short)20);
  private static final TField LAST_BUY_TIME_FIELD_DESC = new TField("lastBuyTime", TType.I64, (short)21);

  public long id;
  public String userId;
  public String loginType;
  public String loginId;
  public String loginPass;
  public String loginPassEncrypt;
  public String phoneNumber;
  public String status;
  public String addressList;
  public String addressListEncrypt;
  public String primaryAddress;
  public String primaryAddressEncrypt;
  public String shoppingCart;
  public String shoppingCartEncrypt;
  public String extraData1;
  public String extraData2;
  public long createTime;
  public long updateTime;
  public long registerTime;
  public long lastLoginTime;
  public long lastBuyTime;

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements TFieldIdEnum {
    ID((short)1, "id"),
    USER_ID((short)2, "userId"),
    LOGIN_TYPE((short)3, "loginType"),
    LOGIN_ID((short)4, "loginId"),
    LOGIN_PASS((short)5, "loginPass"),
    LOGIN_PASS_ENCRYPT((short)6, "loginPassEncrypt"),
    PHONE_NUMBER((short)7, "phoneNumber"),
    STATUS((short)8, "status"),
    ADDRESS_LIST((short)9, "addressList"),
    ADDRESS_LIST_ENCRYPT((short)10, "addressListEncrypt"),
    PRIMARY_ADDRESS((short)11, "primaryAddress"),
    PRIMARY_ADDRESS_ENCRYPT((short)12, "primaryAddressEncrypt"),
    SHOPPING_CART((short)13, "shoppingCart"),
    SHOPPING_CART_ENCRYPT((short)14, "shoppingCartEncrypt"),
    EXTRA_DATA1((short)15, "extraData1"),
    EXTRA_DATA2((short)16, "extraData2"),
    CREATE_TIME((short)17, "createTime"),
    UPDATE_TIME((short)18, "updateTime"),
    REGISTER_TIME((short)19, "registerTime"),
    LAST_LOGIN_TIME((short)20, "lastLoginTime"),
    LAST_BUY_TIME((short)21, "lastBuyTime");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // USER_ID
          return USER_ID;
        case 3: // LOGIN_TYPE
          return LOGIN_TYPE;
        case 4: // LOGIN_ID
          return LOGIN_ID;
        case 5: // LOGIN_PASS
          return LOGIN_PASS;
        case 6: // LOGIN_PASS_ENCRYPT
          return LOGIN_PASS_ENCRYPT;
        case 7: // PHONE_NUMBER
          return PHONE_NUMBER;
        case 8: // STATUS
          return STATUS;
        case 9: // ADDRESS_LIST
          return ADDRESS_LIST;
        case 10: // ADDRESS_LIST_ENCRYPT
          return ADDRESS_LIST_ENCRYPT;
        case 11: // PRIMARY_ADDRESS
          return PRIMARY_ADDRESS;
        case 12: // PRIMARY_ADDRESS_ENCRYPT
          return PRIMARY_ADDRESS_ENCRYPT;
        case 13: // SHOPPING_CART
          return SHOPPING_CART;
        case 14: // SHOPPING_CART_ENCRYPT
          return SHOPPING_CART_ENCRYPT;
        case 15: // EXTRA_DATA1
          return EXTRA_DATA1;
        case 16: // EXTRA_DATA2
          return EXTRA_DATA2;
        case 17: // CREATE_TIME
          return CREATE_TIME;
        case 18: // UPDATE_TIME
          return UPDATE_TIME;
        case 19: // REGISTER_TIME
          return REGISTER_TIME;
        case 20: // LAST_LOGIN_TIME
          return LAST_LOGIN_TIME;
        case 21: // LAST_BUY_TIME
          return LAST_BUY_TIME;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ID_ISSET_ID = 0;
  private static final int __CREATETIME_ISSET_ID = 1;
  private static final int __UPDATETIME_ISSET_ID = 2;
  private static final int __REGISTERTIME_ISSET_ID = 3;
  private static final int __LASTLOGINTIME_ISSET_ID = 4;
  private static final int __LASTBUYTIME_ISSET_ID = 5;
  private BitSet __isset_bit_vector = new BitSet(6);

  public static final Map<_Fields, FieldMetaData> metaDataMap;
  static {
    Map<_Fields, FieldMetaData> tmpMap = new EnumMap<_Fields, FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new FieldMetaData("id", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.I64)));
    tmpMap.put(_Fields.USER_ID, new FieldMetaData("userId", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.LOGIN_TYPE, new FieldMetaData("loginType", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.LOGIN_ID, new FieldMetaData("loginId", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.LOGIN_PASS, new FieldMetaData("loginPass", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.LOGIN_PASS_ENCRYPT, new FieldMetaData("loginPassEncrypt", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.PHONE_NUMBER, new FieldMetaData("phoneNumber", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.STATUS, new FieldMetaData("status", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.ADDRESS_LIST, new FieldMetaData("addressList", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.ADDRESS_LIST_ENCRYPT, new FieldMetaData("addressListEncrypt", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.PRIMARY_ADDRESS, new FieldMetaData("primaryAddress", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.PRIMARY_ADDRESS_ENCRYPT, new FieldMetaData("primaryAddressEncrypt", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.SHOPPING_CART, new FieldMetaData("shoppingCart", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.SHOPPING_CART_ENCRYPT, new FieldMetaData("shoppingCartEncrypt", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.EXTRA_DATA1, new FieldMetaData("extraData1", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.EXTRA_DATA2, new FieldMetaData("extraData2", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.CREATE_TIME, new FieldMetaData("createTime", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.I64)));
    tmpMap.put(_Fields.UPDATE_TIME, new FieldMetaData("updateTime", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.I64)));
    tmpMap.put(_Fields.REGISTER_TIME, new FieldMetaData("registerTime", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.I64)));
    tmpMap.put(_Fields.LAST_LOGIN_TIME, new FieldMetaData("lastLoginTime", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.I64)));
    tmpMap.put(_Fields.LAST_BUY_TIME, new FieldMetaData("lastBuyTime", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.I64)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    FieldMetaData.addStructMetaDataMap(UserDetail.class, metaDataMap);
  }

  public UserDetail() {
  }

  public UserDetail(
    long id,
    String userId,
    String loginType,
    String loginId,
    String loginPass,
    String loginPassEncrypt,
    String phoneNumber,
    String status,
    String addressList,
    String addressListEncrypt,
    String primaryAddress,
    String primaryAddressEncrypt,
    String shoppingCart,
    String shoppingCartEncrypt,
    String extraData1,
    String extraData2,
    long createTime,
    long updateTime,
    long registerTime,
    long lastLoginTime,
    long lastBuyTime)
  {
    this();
    this.id = id;
    setIdIsSet(true);
    this.userId = userId;
    this.loginType = loginType;
    this.loginId = loginId;
    this.loginPass = loginPass;
    this.loginPassEncrypt = loginPassEncrypt;
    this.phoneNumber = phoneNumber;
    this.status = status;
    this.addressList = addressList;
    this.addressListEncrypt = addressListEncrypt;
    this.primaryAddress = primaryAddress;
    this.primaryAddressEncrypt = primaryAddressEncrypt;
    this.shoppingCart = shoppingCart;
    this.shoppingCartEncrypt = shoppingCartEncrypt;
    this.extraData1 = extraData1;
    this.extraData2 = extraData2;
    this.createTime = createTime;
    setCreateTimeIsSet(true);
    this.updateTime = updateTime;
    setUpdateTimeIsSet(true);
    this.registerTime = registerTime;
    setRegisterTimeIsSet(true);
    this.lastLoginTime = lastLoginTime;
    setLastLoginTimeIsSet(true);
    this.lastBuyTime = lastBuyTime;
    setLastBuyTimeIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public UserDetail(UserDetail other) {
    __isset_bit_vector.clear();
    __isset_bit_vector.or(other.__isset_bit_vector);
    this.id = other.id;
    if (other.isSetUserId()) {
      this.userId = other.userId;
    }
    if (other.isSetLoginType()) {
      this.loginType = other.loginType;
    }
    if (other.isSetLoginId()) {
      this.loginId = other.loginId;
    }
    if (other.isSetLoginPass()) {
      this.loginPass = other.loginPass;
    }
    if (other.isSetLoginPassEncrypt()) {
      this.loginPassEncrypt = other.loginPassEncrypt;
    }
    if (other.isSetPhoneNumber()) {
      this.phoneNumber = other.phoneNumber;
    }
    if (other.isSetStatus()) {
      this.status = other.status;
    }
    if (other.isSetAddressList()) {
      this.addressList = other.addressList;
    }
    if (other.isSetAddressListEncrypt()) {
      this.addressListEncrypt = other.addressListEncrypt;
    }
    if (other.isSetPrimaryAddress()) {
      this.primaryAddress = other.primaryAddress;
    }
    if (other.isSetPrimaryAddressEncrypt()) {
      this.primaryAddressEncrypt = other.primaryAddressEncrypt;
    }
    if (other.isSetShoppingCart()) {
      this.shoppingCart = other.shoppingCart;
    }
    if (other.isSetShoppingCartEncrypt()) {
      this.shoppingCartEncrypt = other.shoppingCartEncrypt;
    }
    if (other.isSetExtraData1()) {
      this.extraData1 = other.extraData1;
    }
    if (other.isSetExtraData2()) {
      this.extraData2 = other.extraData2;
    }
    this.createTime = other.createTime;
    this.updateTime = other.updateTime;
    this.registerTime = other.registerTime;
    this.lastLoginTime = other.lastLoginTime;
    this.lastBuyTime = other.lastBuyTime;
  }

  public UserDetail deepCopy() {
    return new UserDetail(this);
  }

  @Override
  public void clear() {
    setIdIsSet(false);
    this.id = 0;
    this.userId = null;
    this.loginType = null;
    this.loginId = null;
    this.loginPass = null;
    this.loginPassEncrypt = null;
    this.phoneNumber = null;
    this.status = null;
    this.addressList = null;
    this.addressListEncrypt = null;
    this.primaryAddress = null;
    this.primaryAddressEncrypt = null;
    this.shoppingCart = null;
    this.shoppingCartEncrypt = null;
    this.extraData1 = null;
    this.extraData2 = null;
    setCreateTimeIsSet(false);
    this.createTime = 0;
    setUpdateTimeIsSet(false);
    this.updateTime = 0;
    setRegisterTimeIsSet(false);
    this.registerTime = 0;
    setLastLoginTimeIsSet(false);
    this.lastLoginTime = 0;
    setLastBuyTimeIsSet(false);
    this.lastBuyTime = 0;
  }

  public long getId() {
    return this.id;
  }

  public UserDetail setId(long id) {
    this.id = id;
    setIdIsSet(true);
    return this;
  }

  public void unsetId() {
    __isset_bit_vector.clear(__ID_ISSET_ID);
  }

  /** Returns true if field id is set (has been asigned a value) and false otherwise */
  public boolean isSetId() {
    return __isset_bit_vector.get(__ID_ISSET_ID);
  }

  public void setIdIsSet(boolean value) {
    __isset_bit_vector.set(__ID_ISSET_ID, value);
  }

  public String getUserId() {
    return this.userId;
  }

  public UserDetail setUserId(String userId) {
    this.userId = userId;
    return this;
  }

  public void unsetUserId() {
    this.userId = null;
  }

  /** Returns true if field userId is set (has been asigned a value) and false otherwise */
  public boolean isSetUserId() {
    return this.userId != null;
  }

  public void setUserIdIsSet(boolean value) {
    if (!value) {
      this.userId = null;
    }
  }

  public String getLoginType() {
    return this.loginType;
  }

  public UserDetail setLoginType(String loginType) {
    this.loginType = loginType;
    return this;
  }

  public void unsetLoginType() {
    this.loginType = null;
  }

  /** Returns true if field loginType is set (has been asigned a value) and false otherwise */
  public boolean isSetLoginType() {
    return this.loginType != null;
  }

  public void setLoginTypeIsSet(boolean value) {
    if (!value) {
      this.loginType = null;
    }
  }

  public String getLoginId() {
    return this.loginId;
  }

  public UserDetail setLoginId(String loginId) {
    this.loginId = loginId;
    return this;
  }

  public void unsetLoginId() {
    this.loginId = null;
  }

  /** Returns true if field loginId is set (has been asigned a value) and false otherwise */
  public boolean isSetLoginId() {
    return this.loginId != null;
  }

  public void setLoginIdIsSet(boolean value) {
    if (!value) {
      this.loginId = null;
    }
  }

  public String getLoginPass() {
    return this.loginPass;
  }

  public UserDetail setLoginPass(String loginPass) {
    this.loginPass = loginPass;
    return this;
  }

  public void unsetLoginPass() {
    this.loginPass = null;
  }

  /** Returns true if field loginPass is set (has been asigned a value) and false otherwise */
  public boolean isSetLoginPass() {
    return this.loginPass != null;
  }

  public void setLoginPassIsSet(boolean value) {
    if (!value) {
      this.loginPass = null;
    }
  }

  public String getLoginPassEncrypt() {
    return this.loginPassEncrypt;
  }

  public UserDetail setLoginPassEncrypt(String loginPassEncrypt) {
    this.loginPassEncrypt = loginPassEncrypt;
    return this;
  }

  public void unsetLoginPassEncrypt() {
    this.loginPassEncrypt = null;
  }

  /** Returns true if field loginPassEncrypt is set (has been asigned a value) and false otherwise */
  public boolean isSetLoginPassEncrypt() {
    return this.loginPassEncrypt != null;
  }

  public void setLoginPassEncryptIsSet(boolean value) {
    if (!value) {
      this.loginPassEncrypt = null;
    }
  }

  public String getPhoneNumber() {
    return this.phoneNumber;
  }

  public UserDetail setPhoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
    return this;
  }

  public void unsetPhoneNumber() {
    this.phoneNumber = null;
  }

  /** Returns true if field phoneNumber is set (has been asigned a value) and false otherwise */
  public boolean isSetPhoneNumber() {
    return this.phoneNumber != null;
  }

  public void setPhoneNumberIsSet(boolean value) {
    if (!value) {
      this.phoneNumber = null;
    }
  }

  public String getStatus() {
    return this.status;
  }

  public UserDetail setStatus(String status) {
    this.status = status;
    return this;
  }

  public void unsetStatus() {
    this.status = null;
  }

  /** Returns true if field status is set (has been asigned a value) and false otherwise */
  public boolean isSetStatus() {
    return this.status != null;
  }

  public void setStatusIsSet(boolean value) {
    if (!value) {
      this.status = null;
    }
  }

  public String getAddressList() {
    return this.addressList;
  }

  public UserDetail setAddressList(String addressList) {
    this.addressList = addressList;
    return this;
  }

  public void unsetAddressList() {
    this.addressList = null;
  }

  /** Returns true if field addressList is set (has been asigned a value) and false otherwise */
  public boolean isSetAddressList() {
    return this.addressList != null;
  }

  public void setAddressListIsSet(boolean value) {
    if (!value) {
      this.addressList = null;
    }
  }

  public String getAddressListEncrypt() {
    return this.addressListEncrypt;
  }

  public UserDetail setAddressListEncrypt(String addressListEncrypt) {
    this.addressListEncrypt = addressListEncrypt;
    return this;
  }

  public void unsetAddressListEncrypt() {
    this.addressListEncrypt = null;
  }

  /** Returns true if field addressListEncrypt is set (has been asigned a value) and false otherwise */
  public boolean isSetAddressListEncrypt() {
    return this.addressListEncrypt != null;
  }

  public void setAddressListEncryptIsSet(boolean value) {
    if (!value) {
      this.addressListEncrypt = null;
    }
  }

  public String getPrimaryAddress() {
    return this.primaryAddress;
  }

  public UserDetail setPrimaryAddress(String primaryAddress) {
    this.primaryAddress = primaryAddress;
    return this;
  }

  public void unsetPrimaryAddress() {
    this.primaryAddress = null;
  }

  /** Returns true if field primaryAddress is set (has been asigned a value) and false otherwise */
  public boolean isSetPrimaryAddress() {
    return this.primaryAddress != null;
  }

  public void setPrimaryAddressIsSet(boolean value) {
    if (!value) {
      this.primaryAddress = null;
    }
  }

  public String getPrimaryAddressEncrypt() {
    return this.primaryAddressEncrypt;
  }

  public UserDetail setPrimaryAddressEncrypt(String primaryAddressEncrypt) {
    this.primaryAddressEncrypt = primaryAddressEncrypt;
    return this;
  }

  public void unsetPrimaryAddressEncrypt() {
    this.primaryAddressEncrypt = null;
  }

  /** Returns true if field primaryAddressEncrypt is set (has been asigned a value) and false otherwise */
  public boolean isSetPrimaryAddressEncrypt() {
    return this.primaryAddressEncrypt != null;
  }

  public void setPrimaryAddressEncryptIsSet(boolean value) {
    if (!value) {
      this.primaryAddressEncrypt = null;
    }
  }

  public String getShoppingCart() {
    return this.shoppingCart;
  }

  public UserDetail setShoppingCart(String shoppingCart) {
    this.shoppingCart = shoppingCart;
    return this;
  }

  public void unsetShoppingCart() {
    this.shoppingCart = null;
  }

  /** Returns true if field shoppingCart is set (has been asigned a value) and false otherwise */
  public boolean isSetShoppingCart() {
    return this.shoppingCart != null;
  }

  public void setShoppingCartIsSet(boolean value) {
    if (!value) {
      this.shoppingCart = null;
    }
  }

  public String getShoppingCartEncrypt() {
    return this.shoppingCartEncrypt;
  }

  public UserDetail setShoppingCartEncrypt(String shoppingCartEncrypt) {
    this.shoppingCartEncrypt = shoppingCartEncrypt;
    return this;
  }

  public void unsetShoppingCartEncrypt() {
    this.shoppingCartEncrypt = null;
  }

  /** Returns true if field shoppingCartEncrypt is set (has been asigned a value) and false otherwise */
  public boolean isSetShoppingCartEncrypt() {
    return this.shoppingCartEncrypt != null;
  }

  public void setShoppingCartEncryptIsSet(boolean value) {
    if (!value) {
      this.shoppingCartEncrypt = null;
    }
  }

  public String getExtraData1() {
    return this.extraData1;
  }

  public UserDetail setExtraData1(String extraData1) {
    this.extraData1 = extraData1;
    return this;
  }

  public void unsetExtraData1() {
    this.extraData1 = null;
  }

  /** Returns true if field extraData1 is set (has been asigned a value) and false otherwise */
  public boolean isSetExtraData1() {
    return this.extraData1 != null;
  }

  public void setExtraData1IsSet(boolean value) {
    if (!value) {
      this.extraData1 = null;
    }
  }

  public String getExtraData2() {
    return this.extraData2;
  }

  public UserDetail setExtraData2(String extraData2) {
    this.extraData2 = extraData2;
    return this;
  }

  public void unsetExtraData2() {
    this.extraData2 = null;
  }

  /** Returns true if field extraData2 is set (has been asigned a value) and false otherwise */
  public boolean isSetExtraData2() {
    return this.extraData2 != null;
  }

  public void setExtraData2IsSet(boolean value) {
    if (!value) {
      this.extraData2 = null;
    }
  }

  public long getCreateTime() {
    return this.createTime;
  }

  public UserDetail setCreateTime(long createTime) {
    this.createTime = createTime;
    setCreateTimeIsSet(true);
    return this;
  }

  public void unsetCreateTime() {
    __isset_bit_vector.clear(__CREATETIME_ISSET_ID);
  }

  /** Returns true if field createTime is set (has been asigned a value) and false otherwise */
  public boolean isSetCreateTime() {
    return __isset_bit_vector.get(__CREATETIME_ISSET_ID);
  }

  public void setCreateTimeIsSet(boolean value) {
    __isset_bit_vector.set(__CREATETIME_ISSET_ID, value);
  }

  public long getUpdateTime() {
    return this.updateTime;
  }

  public UserDetail setUpdateTime(long updateTime) {
    this.updateTime = updateTime;
    setUpdateTimeIsSet(true);
    return this;
  }

  public void unsetUpdateTime() {
    __isset_bit_vector.clear(__UPDATETIME_ISSET_ID);
  }

  /** Returns true if field updateTime is set (has been asigned a value) and false otherwise */
  public boolean isSetUpdateTime() {
    return __isset_bit_vector.get(__UPDATETIME_ISSET_ID);
  }

  public void setUpdateTimeIsSet(boolean value) {
    __isset_bit_vector.set(__UPDATETIME_ISSET_ID, value);
  }

  public long getRegisterTime() {
    return this.registerTime;
  }

  public UserDetail setRegisterTime(long registerTime) {
    this.registerTime = registerTime;
    setRegisterTimeIsSet(true);
    return this;
  }

  public void unsetRegisterTime() {
    __isset_bit_vector.clear(__REGISTERTIME_ISSET_ID);
  }

  /** Returns true if field registerTime is set (has been asigned a value) and false otherwise */
  public boolean isSetRegisterTime() {
    return __isset_bit_vector.get(__REGISTERTIME_ISSET_ID);
  }

  public void setRegisterTimeIsSet(boolean value) {
    __isset_bit_vector.set(__REGISTERTIME_ISSET_ID, value);
  }

  public long getLastLoginTime() {
    return this.lastLoginTime;
  }

  public UserDetail setLastLoginTime(long lastLoginTime) {
    this.lastLoginTime = lastLoginTime;
    setLastLoginTimeIsSet(true);
    return this;
  }

  public void unsetLastLoginTime() {
    __isset_bit_vector.clear(__LASTLOGINTIME_ISSET_ID);
  }

  /** Returns true if field lastLoginTime is set (has been asigned a value) and false otherwise */
  public boolean isSetLastLoginTime() {
    return __isset_bit_vector.get(__LASTLOGINTIME_ISSET_ID);
  }

  public void setLastLoginTimeIsSet(boolean value) {
    __isset_bit_vector.set(__LASTLOGINTIME_ISSET_ID, value);
  }

  public long getLastBuyTime() {
    return this.lastBuyTime;
  }

  public UserDetail setLastBuyTime(long lastBuyTime) {
    this.lastBuyTime = lastBuyTime;
    setLastBuyTimeIsSet(true);
    return this;
  }

  public void unsetLastBuyTime() {
    __isset_bit_vector.clear(__LASTBUYTIME_ISSET_ID);
  }

  /** Returns true if field lastBuyTime is set (has been asigned a value) and false otherwise */
  public boolean isSetLastBuyTime() {
    return __isset_bit_vector.get(__LASTBUYTIME_ISSET_ID);
  }

  public void setLastBuyTimeIsSet(boolean value) {
    __isset_bit_vector.set(__LASTBUYTIME_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((Long)value);
      }
      break;

    case USER_ID:
      if (value == null) {
        unsetUserId();
      } else {
        setUserId((String)value);
      }
      break;

    case LOGIN_TYPE:
      if (value == null) {
        unsetLoginType();
      } else {
        setLoginType((String)value);
      }
      break;

    case LOGIN_ID:
      if (value == null) {
        unsetLoginId();
      } else {
        setLoginId((String)value);
      }
      break;

    case LOGIN_PASS:
      if (value == null) {
        unsetLoginPass();
      } else {
        setLoginPass((String)value);
      }
      break;

    case LOGIN_PASS_ENCRYPT:
      if (value == null) {
        unsetLoginPassEncrypt();
      } else {
        setLoginPassEncrypt((String)value);
      }
      break;

    case PHONE_NUMBER:
      if (value == null) {
        unsetPhoneNumber();
      } else {
        setPhoneNumber((String)value);
      }
      break;

    case STATUS:
      if (value == null) {
        unsetStatus();
      } else {
        setStatus((String)value);
      }
      break;

    case ADDRESS_LIST:
      if (value == null) {
        unsetAddressList();
      } else {
        setAddressList((String)value);
      }
      break;

    case ADDRESS_LIST_ENCRYPT:
      if (value == null) {
        unsetAddressListEncrypt();
      } else {
        setAddressListEncrypt((String)value);
      }
      break;

    case PRIMARY_ADDRESS:
      if (value == null) {
        unsetPrimaryAddress();
      } else {
        setPrimaryAddress((String)value);
      }
      break;

    case PRIMARY_ADDRESS_ENCRYPT:
      if (value == null) {
        unsetPrimaryAddressEncrypt();
      } else {
        setPrimaryAddressEncrypt((String)value);
      }
      break;

    case SHOPPING_CART:
      if (value == null) {
        unsetShoppingCart();
      } else {
        setShoppingCart((String)value);
      }
      break;

    case SHOPPING_CART_ENCRYPT:
      if (value == null) {
        unsetShoppingCartEncrypt();
      } else {
        setShoppingCartEncrypt((String)value);
      }
      break;

    case EXTRA_DATA1:
      if (value == null) {
        unsetExtraData1();
      } else {
        setExtraData1((String)value);
      }
      break;

    case EXTRA_DATA2:
      if (value == null) {
        unsetExtraData2();
      } else {
        setExtraData2((String)value);
      }
      break;

    case CREATE_TIME:
      if (value == null) {
        unsetCreateTime();
      } else {
        setCreateTime((Long)value);
      }
      break;

    case UPDATE_TIME:
      if (value == null) {
        unsetUpdateTime();
      } else {
        setUpdateTime((Long)value);
      }
      break;

    case REGISTER_TIME:
      if (value == null) {
        unsetRegisterTime();
      } else {
        setRegisterTime((Long)value);
      }
      break;

    case LAST_LOGIN_TIME:
      if (value == null) {
        unsetLastLoginTime();
      } else {
        setLastLoginTime((Long)value);
      }
      break;

    case LAST_BUY_TIME:
      if (value == null) {
        unsetLastBuyTime();
      } else {
        setLastBuyTime((Long)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return new Long(getId());

    case USER_ID:
      return getUserId();

    case LOGIN_TYPE:
      return getLoginType();

    case LOGIN_ID:
      return getLoginId();

    case LOGIN_PASS:
      return getLoginPass();

    case LOGIN_PASS_ENCRYPT:
      return getLoginPassEncrypt();

    case PHONE_NUMBER:
      return getPhoneNumber();

    case STATUS:
      return getStatus();

    case ADDRESS_LIST:
      return getAddressList();

    case ADDRESS_LIST_ENCRYPT:
      return getAddressListEncrypt();

    case PRIMARY_ADDRESS:
      return getPrimaryAddress();

    case PRIMARY_ADDRESS_ENCRYPT:
      return getPrimaryAddressEncrypt();

    case SHOPPING_CART:
      return getShoppingCart();

    case SHOPPING_CART_ENCRYPT:
      return getShoppingCartEncrypt();

    case EXTRA_DATA1:
      return getExtraData1();

    case EXTRA_DATA2:
      return getExtraData2();

    case CREATE_TIME:
      return new Long(getCreateTime());

    case UPDATE_TIME:
      return new Long(getUpdateTime());

    case REGISTER_TIME:
      return new Long(getRegisterTime());

    case LAST_LOGIN_TIME:
      return new Long(getLastLoginTime());

    case LAST_BUY_TIME:
      return new Long(getLastBuyTime());

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been asigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case USER_ID:
      return isSetUserId();
    case LOGIN_TYPE:
      return isSetLoginType();
    case LOGIN_ID:
      return isSetLoginId();
    case LOGIN_PASS:
      return isSetLoginPass();
    case LOGIN_PASS_ENCRYPT:
      return isSetLoginPassEncrypt();
    case PHONE_NUMBER:
      return isSetPhoneNumber();
    case STATUS:
      return isSetStatus();
    case ADDRESS_LIST:
      return isSetAddressList();
    case ADDRESS_LIST_ENCRYPT:
      return isSetAddressListEncrypt();
    case PRIMARY_ADDRESS:
      return isSetPrimaryAddress();
    case PRIMARY_ADDRESS_ENCRYPT:
      return isSetPrimaryAddressEncrypt();
    case SHOPPING_CART:
      return isSetShoppingCart();
    case SHOPPING_CART_ENCRYPT:
      return isSetShoppingCartEncrypt();
    case EXTRA_DATA1:
      return isSetExtraData1();
    case EXTRA_DATA2:
      return isSetExtraData2();
    case CREATE_TIME:
      return isSetCreateTime();
    case UPDATE_TIME:
      return isSetUpdateTime();
    case REGISTER_TIME:
      return isSetRegisterTime();
    case LAST_LOGIN_TIME:
      return isSetLastLoginTime();
    case LAST_BUY_TIME:
      return isSetLastBuyTime();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof UserDetail)
      return this.equals((UserDetail)that);
    return false;
  }

  public boolean equals(UserDetail that) {
    if (that == null)
      return false;

    boolean this_present_id = true;
    boolean that_present_id = true;
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (this.id != that.id)
        return false;
    }

    boolean this_present_userId = true && this.isSetUserId();
    boolean that_present_userId = true && that.isSetUserId();
    if (this_present_userId || that_present_userId) {
      if (!(this_present_userId && that_present_userId))
        return false;
      if (!this.userId.equals(that.userId))
        return false;
    }

    boolean this_present_loginType = true && this.isSetLoginType();
    boolean that_present_loginType = true && that.isSetLoginType();
    if (this_present_loginType || that_present_loginType) {
      if (!(this_present_loginType && that_present_loginType))
        return false;
      if (!this.loginType.equals(that.loginType))
        return false;
    }

    boolean this_present_loginId = true && this.isSetLoginId();
    boolean that_present_loginId = true && that.isSetLoginId();
    if (this_present_loginId || that_present_loginId) {
      if (!(this_present_loginId && that_present_loginId))
        return false;
      if (!this.loginId.equals(that.loginId))
        return false;
    }

    boolean this_present_loginPass = true && this.isSetLoginPass();
    boolean that_present_loginPass = true && that.isSetLoginPass();
    if (this_present_loginPass || that_present_loginPass) {
      if (!(this_present_loginPass && that_present_loginPass))
        return false;
      if (!this.loginPass.equals(that.loginPass))
        return false;
    }

    boolean this_present_loginPassEncrypt = true && this.isSetLoginPassEncrypt();
    boolean that_present_loginPassEncrypt = true && that.isSetLoginPassEncrypt();
    if (this_present_loginPassEncrypt || that_present_loginPassEncrypt) {
      if (!(this_present_loginPassEncrypt && that_present_loginPassEncrypt))
        return false;
      if (!this.loginPassEncrypt.equals(that.loginPassEncrypt))
        return false;
    }

    boolean this_present_phoneNumber = true && this.isSetPhoneNumber();
    boolean that_present_phoneNumber = true && that.isSetPhoneNumber();
    if (this_present_phoneNumber || that_present_phoneNumber) {
      if (!(this_present_phoneNumber && that_present_phoneNumber))
        return false;
      if (!this.phoneNumber.equals(that.phoneNumber))
        return false;
    }

    boolean this_present_status = true && this.isSetStatus();
    boolean that_present_status = true && that.isSetStatus();
    if (this_present_status || that_present_status) {
      if (!(this_present_status && that_present_status))
        return false;
      if (!this.status.equals(that.status))
        return false;
    }

    boolean this_present_addressList = true && this.isSetAddressList();
    boolean that_present_addressList = true && that.isSetAddressList();
    if (this_present_addressList || that_present_addressList) {
      if (!(this_present_addressList && that_present_addressList))
        return false;
      if (!this.addressList.equals(that.addressList))
        return false;
    }

    boolean this_present_addressListEncrypt = true && this.isSetAddressListEncrypt();
    boolean that_present_addressListEncrypt = true && that.isSetAddressListEncrypt();
    if (this_present_addressListEncrypt || that_present_addressListEncrypt) {
      if (!(this_present_addressListEncrypt && that_present_addressListEncrypt))
        return false;
      if (!this.addressListEncrypt.equals(that.addressListEncrypt))
        return false;
    }

    boolean this_present_primaryAddress = true && this.isSetPrimaryAddress();
    boolean that_present_primaryAddress = true && that.isSetPrimaryAddress();
    if (this_present_primaryAddress || that_present_primaryAddress) {
      if (!(this_present_primaryAddress && that_present_primaryAddress))
        return false;
      if (!this.primaryAddress.equals(that.primaryAddress))
        return false;
    }

    boolean this_present_primaryAddressEncrypt = true && this.isSetPrimaryAddressEncrypt();
    boolean that_present_primaryAddressEncrypt = true && that.isSetPrimaryAddressEncrypt();
    if (this_present_primaryAddressEncrypt || that_present_primaryAddressEncrypt) {
      if (!(this_present_primaryAddressEncrypt && that_present_primaryAddressEncrypt))
        return false;
      if (!this.primaryAddressEncrypt.equals(that.primaryAddressEncrypt))
        return false;
    }

    boolean this_present_shoppingCart = true && this.isSetShoppingCart();
    boolean that_present_shoppingCart = true && that.isSetShoppingCart();
    if (this_present_shoppingCart || that_present_shoppingCart) {
      if (!(this_present_shoppingCart && that_present_shoppingCart))
        return false;
      if (!this.shoppingCart.equals(that.shoppingCart))
        return false;
    }

    boolean this_present_shoppingCartEncrypt = true && this.isSetShoppingCartEncrypt();
    boolean that_present_shoppingCartEncrypt = true && that.isSetShoppingCartEncrypt();
    if (this_present_shoppingCartEncrypt || that_present_shoppingCartEncrypt) {
      if (!(this_present_shoppingCartEncrypt && that_present_shoppingCartEncrypt))
        return false;
      if (!this.shoppingCartEncrypt.equals(that.shoppingCartEncrypt))
        return false;
    }

    boolean this_present_extraData1 = true && this.isSetExtraData1();
    boolean that_present_extraData1 = true && that.isSetExtraData1();
    if (this_present_extraData1 || that_present_extraData1) {
      if (!(this_present_extraData1 && that_present_extraData1))
        return false;
      if (!this.extraData1.equals(that.extraData1))
        return false;
    }

    boolean this_present_extraData2 = true && this.isSetExtraData2();
    boolean that_present_extraData2 = true && that.isSetExtraData2();
    if (this_present_extraData2 || that_present_extraData2) {
      if (!(this_present_extraData2 && that_present_extraData2))
        return false;
      if (!this.extraData2.equals(that.extraData2))
        return false;
    }

    boolean this_present_createTime = true;
    boolean that_present_createTime = true;
    if (this_present_createTime || that_present_createTime) {
      if (!(this_present_createTime && that_present_createTime))
        return false;
      if (this.createTime != that.createTime)
        return false;
    }

    boolean this_present_updateTime = true;
    boolean that_present_updateTime = true;
    if (this_present_updateTime || that_present_updateTime) {
      if (!(this_present_updateTime && that_present_updateTime))
        return false;
      if (this.updateTime != that.updateTime)
        return false;
    }

    boolean this_present_registerTime = true;
    boolean that_present_registerTime = true;
    if (this_present_registerTime || that_present_registerTime) {
      if (!(this_present_registerTime && that_present_registerTime))
        return false;
      if (this.registerTime != that.registerTime)
        return false;
    }

    boolean this_present_lastLoginTime = true;
    boolean that_present_lastLoginTime = true;
    if (this_present_lastLoginTime || that_present_lastLoginTime) {
      if (!(this_present_lastLoginTime && that_present_lastLoginTime))
        return false;
      if (this.lastLoginTime != that.lastLoginTime)
        return false;
    }

    boolean this_present_lastBuyTime = true;
    boolean that_present_lastBuyTime = true;
    if (this_present_lastBuyTime || that_present_lastBuyTime) {
      if (!(this_present_lastBuyTime && that_present_lastBuyTime))
        return false;
      if (this.lastBuyTime != that.lastBuyTime)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  public int compareTo(UserDetail other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;
    UserDetail typedOther = (UserDetail)other;

    lastComparison = Boolean.valueOf(isSetId()).compareTo(typedOther.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = TBaseHelper.compareTo(this.id, typedOther.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUserId()).compareTo(typedOther.isSetUserId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUserId()) {
      lastComparison = TBaseHelper.compareTo(this.userId, typedOther.userId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLoginType()).compareTo(typedOther.isSetLoginType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLoginType()) {
      lastComparison = TBaseHelper.compareTo(this.loginType, typedOther.loginType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLoginId()).compareTo(typedOther.isSetLoginId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLoginId()) {
      lastComparison = TBaseHelper.compareTo(this.loginId, typedOther.loginId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLoginPass()).compareTo(typedOther.isSetLoginPass());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLoginPass()) {
      lastComparison = TBaseHelper.compareTo(this.loginPass, typedOther.loginPass);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLoginPassEncrypt()).compareTo(typedOther.isSetLoginPassEncrypt());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLoginPassEncrypt()) {
      lastComparison = TBaseHelper.compareTo(this.loginPassEncrypt, typedOther.loginPassEncrypt);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPhoneNumber()).compareTo(typedOther.isSetPhoneNumber());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPhoneNumber()) {
      lastComparison = TBaseHelper.compareTo(this.phoneNumber, typedOther.phoneNumber);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStatus()).compareTo(typedOther.isSetStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStatus()) {
      lastComparison = TBaseHelper.compareTo(this.status, typedOther.status);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAddressList()).compareTo(typedOther.isSetAddressList());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAddressList()) {
      lastComparison = TBaseHelper.compareTo(this.addressList, typedOther.addressList);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAddressListEncrypt()).compareTo(typedOther.isSetAddressListEncrypt());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAddressListEncrypt()) {
      lastComparison = TBaseHelper.compareTo(this.addressListEncrypt, typedOther.addressListEncrypt);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPrimaryAddress()).compareTo(typedOther.isSetPrimaryAddress());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPrimaryAddress()) {
      lastComparison = TBaseHelper.compareTo(this.primaryAddress, typedOther.primaryAddress);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPrimaryAddressEncrypt()).compareTo(typedOther.isSetPrimaryAddressEncrypt());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPrimaryAddressEncrypt()) {
      lastComparison = TBaseHelper.compareTo(this.primaryAddressEncrypt, typedOther.primaryAddressEncrypt);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetShoppingCart()).compareTo(typedOther.isSetShoppingCart());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetShoppingCart()) {
      lastComparison = TBaseHelper.compareTo(this.shoppingCart, typedOther.shoppingCart);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetShoppingCartEncrypt()).compareTo(typedOther.isSetShoppingCartEncrypt());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetShoppingCartEncrypt()) {
      lastComparison = TBaseHelper.compareTo(this.shoppingCartEncrypt, typedOther.shoppingCartEncrypt);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetExtraData1()).compareTo(typedOther.isSetExtraData1());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetExtraData1()) {
      lastComparison = TBaseHelper.compareTo(this.extraData1, typedOther.extraData1);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetExtraData2()).compareTo(typedOther.isSetExtraData2());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetExtraData2()) {
      lastComparison = TBaseHelper.compareTo(this.extraData2, typedOther.extraData2);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreateTime()).compareTo(typedOther.isSetCreateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateTime()) {
      lastComparison = TBaseHelper.compareTo(this.createTime, typedOther.createTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUpdateTime()).compareTo(typedOther.isSetUpdateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUpdateTime()) {
      lastComparison = TBaseHelper.compareTo(this.updateTime, typedOther.updateTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRegisterTime()).compareTo(typedOther.isSetRegisterTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRegisterTime()) {
      lastComparison = TBaseHelper.compareTo(this.registerTime, typedOther.registerTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLastLoginTime()).compareTo(typedOther.isSetLastLoginTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLastLoginTime()) {
      lastComparison = TBaseHelper.compareTo(this.lastLoginTime, typedOther.lastLoginTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLastBuyTime()).compareTo(typedOther.isSetLastBuyTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLastBuyTime()) {
      lastComparison = TBaseHelper.compareTo(this.lastBuyTime, typedOther.lastBuyTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(TProtocol iprot) throws TException {
    TField field;
    iprot.readStructBegin();
    while (true)
    {
      field = iprot.readFieldBegin();
      if (field.type == TType.STOP) { 
        break;
      }
      switch (field.id) {
        case 1: // ID
          if (field.type == TType.I64) {
            this.id = iprot.readI64();
            setIdIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 2: // USER_ID
          if (field.type == TType.STRING) {
            this.userId = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 3: // LOGIN_TYPE
          if (field.type == TType.STRING) {
            this.loginType = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 4: // LOGIN_ID
          if (field.type == TType.STRING) {
            this.loginId = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 5: // LOGIN_PASS
          if (field.type == TType.STRING) {
            this.loginPass = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 6: // LOGIN_PASS_ENCRYPT
          if (field.type == TType.STRING) {
            this.loginPassEncrypt = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 7: // PHONE_NUMBER
          if (field.type == TType.STRING) {
            this.phoneNumber = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 8: // STATUS
          if (field.type == TType.STRING) {
            this.status = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 9: // ADDRESS_LIST
          if (field.type == TType.STRING) {
            this.addressList = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 10: // ADDRESS_LIST_ENCRYPT
          if (field.type == TType.STRING) {
            this.addressListEncrypt = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 11: // PRIMARY_ADDRESS
          if (field.type == TType.STRING) {
            this.primaryAddress = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 12: // PRIMARY_ADDRESS_ENCRYPT
          if (field.type == TType.STRING) {
            this.primaryAddressEncrypt = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 13: // SHOPPING_CART
          if (field.type == TType.STRING) {
            this.shoppingCart = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 14: // SHOPPING_CART_ENCRYPT
          if (field.type == TType.STRING) {
            this.shoppingCartEncrypt = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 15: // EXTRA_DATA1
          if (field.type == TType.STRING) {
            this.extraData1 = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 16: // EXTRA_DATA2
          if (field.type == TType.STRING) {
            this.extraData2 = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 17: // CREATE_TIME
          if (field.type == TType.I64) {
            this.createTime = iprot.readI64();
            setCreateTimeIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 18: // UPDATE_TIME
          if (field.type == TType.I64) {
            this.updateTime = iprot.readI64();
            setUpdateTimeIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 19: // REGISTER_TIME
          if (field.type == TType.I64) {
            this.registerTime = iprot.readI64();
            setRegisterTimeIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 20: // LAST_LOGIN_TIME
          if (field.type == TType.I64) {
            this.lastLoginTime = iprot.readI64();
            setLastLoginTimeIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 21: // LAST_BUY_TIME
          if (field.type == TType.I64) {
            this.lastBuyTime = iprot.readI64();
            setLastBuyTimeIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        default:
          TProtocolUtil.skip(iprot, field.type);
      }
      iprot.readFieldEnd();
    }
    iprot.readStructEnd();

    // check for required fields of primitive type, which can't be checked in the validate method
    validate();
  }

  public void write(TProtocol oprot) throws TException {
    validate();

    oprot.writeStructBegin(STRUCT_DESC);
    oprot.writeFieldBegin(ID_FIELD_DESC);
    oprot.writeI64(this.id);
    oprot.writeFieldEnd();
    if (this.userId != null) {
      oprot.writeFieldBegin(USER_ID_FIELD_DESC);
      oprot.writeString(this.userId);
      oprot.writeFieldEnd();
    }
    if (this.loginType != null) {
      oprot.writeFieldBegin(LOGIN_TYPE_FIELD_DESC);
      oprot.writeString(this.loginType);
      oprot.writeFieldEnd();
    }
    if (this.loginId != null) {
      oprot.writeFieldBegin(LOGIN_ID_FIELD_DESC);
      oprot.writeString(this.loginId);
      oprot.writeFieldEnd();
    }
    if (this.loginPass != null) {
      oprot.writeFieldBegin(LOGIN_PASS_FIELD_DESC);
      oprot.writeString(this.loginPass);
      oprot.writeFieldEnd();
    }
    if (this.loginPassEncrypt != null) {
      oprot.writeFieldBegin(LOGIN_PASS_ENCRYPT_FIELD_DESC);
      oprot.writeString(this.loginPassEncrypt);
      oprot.writeFieldEnd();
    }
    if (this.phoneNumber != null) {
      oprot.writeFieldBegin(PHONE_NUMBER_FIELD_DESC);
      oprot.writeString(this.phoneNumber);
      oprot.writeFieldEnd();
    }
    if (this.status != null) {
      oprot.writeFieldBegin(STATUS_FIELD_DESC);
      oprot.writeString(this.status);
      oprot.writeFieldEnd();
    }
    if (this.addressList != null) {
      oprot.writeFieldBegin(ADDRESS_LIST_FIELD_DESC);
      oprot.writeString(this.addressList);
      oprot.writeFieldEnd();
    }
    if (this.addressListEncrypt != null) {
      oprot.writeFieldBegin(ADDRESS_LIST_ENCRYPT_FIELD_DESC);
      oprot.writeString(this.addressListEncrypt);
      oprot.writeFieldEnd();
    }
    if (this.primaryAddress != null) {
      oprot.writeFieldBegin(PRIMARY_ADDRESS_FIELD_DESC);
      oprot.writeString(this.primaryAddress);
      oprot.writeFieldEnd();
    }
    if (this.primaryAddressEncrypt != null) {
      oprot.writeFieldBegin(PRIMARY_ADDRESS_ENCRYPT_FIELD_DESC);
      oprot.writeString(this.primaryAddressEncrypt);
      oprot.writeFieldEnd();
    }
    if (this.shoppingCart != null) {
      oprot.writeFieldBegin(SHOPPING_CART_FIELD_DESC);
      oprot.writeString(this.shoppingCart);
      oprot.writeFieldEnd();
    }
    if (this.shoppingCartEncrypt != null) {
      oprot.writeFieldBegin(SHOPPING_CART_ENCRYPT_FIELD_DESC);
      oprot.writeString(this.shoppingCartEncrypt);
      oprot.writeFieldEnd();
    }
    if (this.extraData1 != null) {
      oprot.writeFieldBegin(EXTRA_DATA1_FIELD_DESC);
      oprot.writeString(this.extraData1);
      oprot.writeFieldEnd();
    }
    if (this.extraData2 != null) {
      oprot.writeFieldBegin(EXTRA_DATA2_FIELD_DESC);
      oprot.writeString(this.extraData2);
      oprot.writeFieldEnd();
    }
    oprot.writeFieldBegin(CREATE_TIME_FIELD_DESC);
    oprot.writeI64(this.createTime);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(UPDATE_TIME_FIELD_DESC);
    oprot.writeI64(this.updateTime);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(REGISTER_TIME_FIELD_DESC);
    oprot.writeI64(this.registerTime);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(LAST_LOGIN_TIME_FIELD_DESC);
    oprot.writeI64(this.lastLoginTime);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(LAST_BUY_TIME_FIELD_DESC);
    oprot.writeI64(this.lastBuyTime);
    oprot.writeFieldEnd();
    oprot.writeFieldStop();
    oprot.writeStructEnd();
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("UserDetail(");
    boolean first = true;

    sb.append("id:");
    sb.append(this.id);
    first = false;
    if (!first) sb.append(", ");
    sb.append("userId:");
    if (this.userId == null) {
      sb.append("null");
    } else {
      sb.append(this.userId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("loginType:");
    if (this.loginType == null) {
      sb.append("null");
    } else {
      sb.append(this.loginType);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("loginId:");
    if (this.loginId == null) {
      sb.append("null");
    } else {
      sb.append(this.loginId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("loginPass:");
    if (this.loginPass == null) {
      sb.append("null");
    } else {
      sb.append(this.loginPass);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("loginPassEncrypt:");
    if (this.loginPassEncrypt == null) {
      sb.append("null");
    } else {
      sb.append(this.loginPassEncrypt);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("phoneNumber:");
    if (this.phoneNumber == null) {
      sb.append("null");
    } else {
      sb.append(this.phoneNumber);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("status:");
    if (this.status == null) {
      sb.append("null");
    } else {
      sb.append(this.status);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("addressList:");
    if (this.addressList == null) {
      sb.append("null");
    } else {
      sb.append(this.addressList);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("addressListEncrypt:");
    if (this.addressListEncrypt == null) {
      sb.append("null");
    } else {
      sb.append(this.addressListEncrypt);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("primaryAddress:");
    if (this.primaryAddress == null) {
      sb.append("null");
    } else {
      sb.append(this.primaryAddress);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("primaryAddressEncrypt:");
    if (this.primaryAddressEncrypt == null) {
      sb.append("null");
    } else {
      sb.append(this.primaryAddressEncrypt);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("shoppingCart:");
    if (this.shoppingCart == null) {
      sb.append("null");
    } else {
      sb.append(this.shoppingCart);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("shoppingCartEncrypt:");
    if (this.shoppingCartEncrypt == null) {
      sb.append("null");
    } else {
      sb.append(this.shoppingCartEncrypt);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("extraData1:");
    if (this.extraData1 == null) {
      sb.append("null");
    } else {
      sb.append(this.extraData1);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("extraData2:");
    if (this.extraData2 == null) {
      sb.append("null");
    } else {
      sb.append(this.extraData2);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("createTime:");
    sb.append(this.createTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("updateTime:");
    sb.append(this.updateTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("registerTime:");
    sb.append(this.registerTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("lastLoginTime:");
    sb.append(this.lastLoginTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("lastBuyTime:");
    sb.append(this.lastBuyTime);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws TException {
    // check for required fields
  }

}

