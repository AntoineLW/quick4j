/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */
package com.eliteams.quick4j.web.model.school;

import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import org.apache.thrift.*;
import org.apache.thrift.async.*;
import org.apache.thrift.meta_data.*;
import org.apache.thrift.transport.*;
import org.apache.thrift.protocol.*;

public class SellerDetail implements TBase<SellerDetail, SellerDetail._Fields>, java.io.Serializable, Cloneable {
  private static final TStruct STRUCT_DESC = new TStruct("SellerDetail");

  private static final TField ID_FIELD_DESC = new TField("id", TType.I32, (short)1);
  private static final TField SELLER_ID_FIELD_DESC = new TField("sellerId", TType.STRING, (short)2);
  private static final TField SELLER_NAME_FIELD_DESC = new TField("sellerName", TType.STRING, (short)3);
  private static final TField SELLER_ADDRESS_FIELD_DESC = new TField("sellerAddress", TType.STRING, (short)4);
  private static final TField SELLER_COORDINATE_FIELD_DESC = new TField("sellerCoordinate", TType.STRING, (short)5);
  private static final TField SELLER_DESC_FIELD_DESC = new TField("sellerDesc", TType.STRING, (short)6);
  private static final TField SELLER_INFO_FIELD_DESC = new TField("sellerInfo", TType.STRING, (short)7);
  private static final TField PROVINCE_CODE_FIELD_DESC = new TField("provinceCode", TType.I32, (short)8);
  private static final TField PROVINCE_NAME_FIELD_DESC = new TField("provinceName", TType.STRING, (short)9);
  private static final TField CITY_CODE_FIELD_DESC = new TField("cityCode", TType.I32, (short)10);
  private static final TField CITY_NAME_FIELD_DESC = new TField("cityName", TType.STRING, (short)11);
  private static final TField DISTRICT_CODE_FIELD_DESC = new TField("districtCode", TType.I32, (short)12);
  private static final TField DISTRICT_NAME_FIELD_DESC = new TField("districtName", TType.STRING, (short)13);
  private static final TField STATUS_FIELD_DESC = new TField("status", TType.STRING, (short)14);
  private static final TField SELLER_PHOTO_JSONS_FIELD_DESC = new TField("sellerPhotoJsons", TType.STRING, (short)15);
  private static final TField CONTRACT_PHOTO_JSONS_FIELD_DESC = new TField("contractPhotoJsons", TType.STRING, (short)16);
  private static final TField BELONG_SCHOOL_LIST_FIELD_DESC = new TField("belongSchoolList", TType.STRING, (short)17);
  private static final TField EXTRA_DATA1_FIELD_DESC = new TField("extraData1", TType.STRING, (short)18);
  private static final TField EXTRA_DATA2_FIELD_DESC = new TField("extraData2", TType.STRING, (short)19);
  private static final TField CREATE_TIME_FIELD_DESC = new TField("createTime", TType.I64, (short)20);
  private static final TField UPDATE_TIME_FIELD_DESC = new TField("updateTime", TType.I64, (short)21);
  private static final TField ONLINE_TIME_FIELD_DESC = new TField("onlineTime", TType.I64, (short)22);
  private static final TField OFFLINE_TIME_FIELD_DESC = new TField("offlineTime", TType.I64, (short)23);

  public int id;
  public String sellerId;
  public String sellerName;
  public String sellerAddress;
  public String sellerCoordinate;
  public String sellerDesc;
  public String sellerInfo;
  public int provinceCode;
  public String provinceName;
  public int cityCode;
  public String cityName;
  public int districtCode;
  public String districtName;
  public String status;
  public String sellerPhotoJsons;
  public String contractPhotoJsons;
  public String belongSchoolList;
  public String extraData1;
  public String extraData2;
  public long createTime;
  public long updateTime;
  public long onlineTime;
  public long offlineTime;

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements TFieldIdEnum {
    ID((short)1, "id"),
    SELLER_ID((short)2, "sellerId"),
    SELLER_NAME((short)3, "sellerName"),
    SELLER_ADDRESS((short)4, "sellerAddress"),
    SELLER_COORDINATE((short)5, "sellerCoordinate"),
    SELLER_DESC((short)6, "sellerDesc"),
    SELLER_INFO((short)7, "sellerInfo"),
    PROVINCE_CODE((short)8, "provinceCode"),
    PROVINCE_NAME((short)9, "provinceName"),
    CITY_CODE((short)10, "cityCode"),
    CITY_NAME((short)11, "cityName"),
    DISTRICT_CODE((short)12, "districtCode"),
    DISTRICT_NAME((short)13, "districtName"),
    STATUS((short)14, "status"),
    SELLER_PHOTO_JSONS((short)15, "sellerPhotoJsons"),
    CONTRACT_PHOTO_JSONS((short)16, "contractPhotoJsons"),
    BELONG_SCHOOL_LIST((short)17, "belongSchoolList"),
    EXTRA_DATA1((short)18, "extraData1"),
    EXTRA_DATA2((short)19, "extraData2"),
    CREATE_TIME((short)20, "createTime"),
    UPDATE_TIME((short)21, "updateTime"),
    ONLINE_TIME((short)22, "onlineTime"),
    OFFLINE_TIME((short)23, "offlineTime");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // SELLER_ID
          return SELLER_ID;
        case 3: // SELLER_NAME
          return SELLER_NAME;
        case 4: // SELLER_ADDRESS
          return SELLER_ADDRESS;
        case 5: // SELLER_COORDINATE
          return SELLER_COORDINATE;
        case 6: // SELLER_DESC
          return SELLER_DESC;
        case 7: // SELLER_INFO
          return SELLER_INFO;
        case 8: // PROVINCE_CODE
          return PROVINCE_CODE;
        case 9: // PROVINCE_NAME
          return PROVINCE_NAME;
        case 10: // CITY_CODE
          return CITY_CODE;
        case 11: // CITY_NAME
          return CITY_NAME;
        case 12: // DISTRICT_CODE
          return DISTRICT_CODE;
        case 13: // DISTRICT_NAME
          return DISTRICT_NAME;
        case 14: // STATUS
          return STATUS;
        case 15: // SELLER_PHOTO_JSONS
          return SELLER_PHOTO_JSONS;
        case 16: // CONTRACT_PHOTO_JSONS
          return CONTRACT_PHOTO_JSONS;
        case 17: // BELONG_SCHOOL_LIST
          return BELONG_SCHOOL_LIST;
        case 18: // EXTRA_DATA1
          return EXTRA_DATA1;
        case 19: // EXTRA_DATA2
          return EXTRA_DATA2;
        case 20: // CREATE_TIME
          return CREATE_TIME;
        case 21: // UPDATE_TIME
          return UPDATE_TIME;
        case 22: // ONLINE_TIME
          return ONLINE_TIME;
        case 23: // OFFLINE_TIME
          return OFFLINE_TIME;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ID_ISSET_ID = 0;
  private static final int __PROVINCECODE_ISSET_ID = 1;
  private static final int __CITYCODE_ISSET_ID = 2;
  private static final int __DISTRICTCODE_ISSET_ID = 3;
  private static final int __CREATETIME_ISSET_ID = 4;
  private static final int __UPDATETIME_ISSET_ID = 5;
  private static final int __ONLINETIME_ISSET_ID = 6;
  private static final int __OFFLINETIME_ISSET_ID = 7;
  private BitSet __isset_bit_vector = new BitSet(8);

  public static final Map<_Fields, FieldMetaData> metaDataMap;
  static {
    Map<_Fields, FieldMetaData> tmpMap = new EnumMap<_Fields, FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new FieldMetaData("id", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.I32)));
    tmpMap.put(_Fields.SELLER_ID, new FieldMetaData("sellerId", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.SELLER_NAME, new FieldMetaData("sellerName", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.SELLER_ADDRESS, new FieldMetaData("sellerAddress", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.SELLER_COORDINATE, new FieldMetaData("sellerCoordinate", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.SELLER_DESC, new FieldMetaData("sellerDesc", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.SELLER_INFO, new FieldMetaData("sellerInfo", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.PROVINCE_CODE, new FieldMetaData("provinceCode", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.I32)));
    tmpMap.put(_Fields.PROVINCE_NAME, new FieldMetaData("provinceName", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.CITY_CODE, new FieldMetaData("cityCode", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.I32)));
    tmpMap.put(_Fields.CITY_NAME, new FieldMetaData("cityName", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.DISTRICT_CODE, new FieldMetaData("districtCode", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.I32)));
    tmpMap.put(_Fields.DISTRICT_NAME, new FieldMetaData("districtName", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.STATUS, new FieldMetaData("status", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.SELLER_PHOTO_JSONS, new FieldMetaData("sellerPhotoJsons", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.CONTRACT_PHOTO_JSONS, new FieldMetaData("contractPhotoJsons", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.BELONG_SCHOOL_LIST, new FieldMetaData("belongSchoolList", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.EXTRA_DATA1, new FieldMetaData("extraData1", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.EXTRA_DATA2, new FieldMetaData("extraData2", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.CREATE_TIME, new FieldMetaData("createTime", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.I64)));
    tmpMap.put(_Fields.UPDATE_TIME, new FieldMetaData("updateTime", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.I64)));
    tmpMap.put(_Fields.ONLINE_TIME, new FieldMetaData("onlineTime", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.I64)));
    tmpMap.put(_Fields.OFFLINE_TIME, new FieldMetaData("offlineTime", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.I64)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    FieldMetaData.addStructMetaDataMap(SellerDetail.class, metaDataMap);
  }

  public SellerDetail() {
  }

  public SellerDetail(
    int id,
    String sellerId,
    String sellerName,
    String sellerAddress,
    String sellerCoordinate,
    String sellerDesc,
    String sellerInfo,
    int provinceCode,
    String provinceName,
    int cityCode,
    String cityName,
    int districtCode,
    String districtName,
    String status,
    String sellerPhotoJsons,
    String contractPhotoJsons,
    String belongSchoolList,
    String extraData1,
    String extraData2,
    long createTime,
    long updateTime,
    long onlineTime,
    long offlineTime)
  {
    this();
    this.id = id;
    setIdIsSet(true);
    this.sellerId = sellerId;
    this.sellerName = sellerName;
    this.sellerAddress = sellerAddress;
    this.sellerCoordinate = sellerCoordinate;
    this.sellerDesc = sellerDesc;
    this.sellerInfo = sellerInfo;
    this.provinceCode = provinceCode;
    setProvinceCodeIsSet(true);
    this.provinceName = provinceName;
    this.cityCode = cityCode;
    setCityCodeIsSet(true);
    this.cityName = cityName;
    this.districtCode = districtCode;
    setDistrictCodeIsSet(true);
    this.districtName = districtName;
    this.status = status;
    this.sellerPhotoJsons = sellerPhotoJsons;
    this.contractPhotoJsons = contractPhotoJsons;
    this.belongSchoolList = belongSchoolList;
    this.extraData1 = extraData1;
    this.extraData2 = extraData2;
    this.createTime = createTime;
    setCreateTimeIsSet(true);
    this.updateTime = updateTime;
    setUpdateTimeIsSet(true);
    this.onlineTime = onlineTime;
    setOnlineTimeIsSet(true);
    this.offlineTime = offlineTime;
    setOfflineTimeIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public SellerDetail(SellerDetail other) {
    __isset_bit_vector.clear();
    __isset_bit_vector.or(other.__isset_bit_vector);
    this.id = other.id;
    if (other.isSetSellerId()) {
      this.sellerId = other.sellerId;
    }
    if (other.isSetSellerName()) {
      this.sellerName = other.sellerName;
    }
    if (other.isSetSellerAddress()) {
      this.sellerAddress = other.sellerAddress;
    }
    if (other.isSetSellerCoordinate()) {
      this.sellerCoordinate = other.sellerCoordinate;
    }
    if (other.isSetSellerDesc()) {
      this.sellerDesc = other.sellerDesc;
    }
    if (other.isSetSellerInfo()) {
      this.sellerInfo = other.sellerInfo;
    }
    this.provinceCode = other.provinceCode;
    if (other.isSetProvinceName()) {
      this.provinceName = other.provinceName;
    }
    this.cityCode = other.cityCode;
    if (other.isSetCityName()) {
      this.cityName = other.cityName;
    }
    this.districtCode = other.districtCode;
    if (other.isSetDistrictName()) {
      this.districtName = other.districtName;
    }
    if (other.isSetStatus()) {
      this.status = other.status;
    }
    if (other.isSetSellerPhotoJsons()) {
      this.sellerPhotoJsons = other.sellerPhotoJsons;
    }
    if (other.isSetContractPhotoJsons()) {
      this.contractPhotoJsons = other.contractPhotoJsons;
    }
    if (other.isSetBelongSchoolList()) {
      this.belongSchoolList = other.belongSchoolList;
    }
    if (other.isSetExtraData1()) {
      this.extraData1 = other.extraData1;
    }
    if (other.isSetExtraData2()) {
      this.extraData2 = other.extraData2;
    }
    this.createTime = other.createTime;
    this.updateTime = other.updateTime;
    this.onlineTime = other.onlineTime;
    this.offlineTime = other.offlineTime;
  }

  public SellerDetail deepCopy() {
    return new SellerDetail(this);
  }

  @Override
  public void clear() {
    setIdIsSet(false);
    this.id = 0;
    this.sellerId = null;
    this.sellerName = null;
    this.sellerAddress = null;
    this.sellerCoordinate = null;
    this.sellerDesc = null;
    this.sellerInfo = null;
    setProvinceCodeIsSet(false);
    this.provinceCode = 0;
    this.provinceName = null;
    setCityCodeIsSet(false);
    this.cityCode = 0;
    this.cityName = null;
    setDistrictCodeIsSet(false);
    this.districtCode = 0;
    this.districtName = null;
    this.status = null;
    this.sellerPhotoJsons = null;
    this.contractPhotoJsons = null;
    this.belongSchoolList = null;
    this.extraData1 = null;
    this.extraData2 = null;
    setCreateTimeIsSet(false);
    this.createTime = 0;
    setUpdateTimeIsSet(false);
    this.updateTime = 0;
    setOnlineTimeIsSet(false);
    this.onlineTime = 0;
    setOfflineTimeIsSet(false);
    this.offlineTime = 0;
  }

  public int getId() {
    return this.id;
  }

  public SellerDetail setId(int id) {
    this.id = id;
    setIdIsSet(true);
    return this;
  }

  public void unsetId() {
    __isset_bit_vector.clear(__ID_ISSET_ID);
  }

  /** Returns true if field id is set (has been asigned a value) and false otherwise */
  public boolean isSetId() {
    return __isset_bit_vector.get(__ID_ISSET_ID);
  }

  public void setIdIsSet(boolean value) {
    __isset_bit_vector.set(__ID_ISSET_ID, value);
  }

  public String getSellerId() {
    return this.sellerId;
  }

  public SellerDetail setSellerId(String sellerId) {
    this.sellerId = sellerId;
    return this;
  }

  public void unsetSellerId() {
    this.sellerId = null;
  }

  /** Returns true if field sellerId is set (has been asigned a value) and false otherwise */
  public boolean isSetSellerId() {
    return this.sellerId != null;
  }

  public void setSellerIdIsSet(boolean value) {
    if (!value) {
      this.sellerId = null;
    }
  }

  public String getSellerName() {
    return this.sellerName;
  }

  public SellerDetail setSellerName(String sellerName) {
    this.sellerName = sellerName;
    return this;
  }

  public void unsetSellerName() {
    this.sellerName = null;
  }

  /** Returns true if field sellerName is set (has been asigned a value) and false otherwise */
  public boolean isSetSellerName() {
    return this.sellerName != null;
  }

  public void setSellerNameIsSet(boolean value) {
    if (!value) {
      this.sellerName = null;
    }
  }

  public String getSellerAddress() {
    return this.sellerAddress;
  }

  public SellerDetail setSellerAddress(String sellerAddress) {
    this.sellerAddress = sellerAddress;
    return this;
  }

  public void unsetSellerAddress() {
    this.sellerAddress = null;
  }

  /** Returns true if field sellerAddress is set (has been asigned a value) and false otherwise */
  public boolean isSetSellerAddress() {
    return this.sellerAddress != null;
  }

  public void setSellerAddressIsSet(boolean value) {
    if (!value) {
      this.sellerAddress = null;
    }
  }

  public String getSellerCoordinate() {
    return this.sellerCoordinate;
  }

  public SellerDetail setSellerCoordinate(String sellerCoordinate) {
    this.sellerCoordinate = sellerCoordinate;
    return this;
  }

  public void unsetSellerCoordinate() {
    this.sellerCoordinate = null;
  }

  /** Returns true if field sellerCoordinate is set (has been asigned a value) and false otherwise */
  public boolean isSetSellerCoordinate() {
    return this.sellerCoordinate != null;
  }

  public void setSellerCoordinateIsSet(boolean value) {
    if (!value) {
      this.sellerCoordinate = null;
    }
  }

  public String getSellerDesc() {
    return this.sellerDesc;
  }

  public SellerDetail setSellerDesc(String sellerDesc) {
    this.sellerDesc = sellerDesc;
    return this;
  }

  public void unsetSellerDesc() {
    this.sellerDesc = null;
  }

  /** Returns true if field sellerDesc is set (has been asigned a value) and false otherwise */
  public boolean isSetSellerDesc() {
    return this.sellerDesc != null;
  }

  public void setSellerDescIsSet(boolean value) {
    if (!value) {
      this.sellerDesc = null;
    }
  }

  public String getSellerInfo() {
    return this.sellerInfo;
  }

  public SellerDetail setSellerInfo(String sellerInfo) {
    this.sellerInfo = sellerInfo;
    return this;
  }

  public void unsetSellerInfo() {
    this.sellerInfo = null;
  }

  /** Returns true if field sellerInfo is set (has been asigned a value) and false otherwise */
  public boolean isSetSellerInfo() {
    return this.sellerInfo != null;
  }

  public void setSellerInfoIsSet(boolean value) {
    if (!value) {
      this.sellerInfo = null;
    }
  }

  public int getProvinceCode() {
    return this.provinceCode;
  }

  public SellerDetail setProvinceCode(int provinceCode) {
    this.provinceCode = provinceCode;
    setProvinceCodeIsSet(true);
    return this;
  }

  public void unsetProvinceCode() {
    __isset_bit_vector.clear(__PROVINCECODE_ISSET_ID);
  }

  /** Returns true if field provinceCode is set (has been asigned a value) and false otherwise */
  public boolean isSetProvinceCode() {
    return __isset_bit_vector.get(__PROVINCECODE_ISSET_ID);
  }

  public void setProvinceCodeIsSet(boolean value) {
    __isset_bit_vector.set(__PROVINCECODE_ISSET_ID, value);
  }

  public String getProvinceName() {
    return this.provinceName;
  }

  public SellerDetail setProvinceName(String provinceName) {
    this.provinceName = provinceName;
    return this;
  }

  public void unsetProvinceName() {
    this.provinceName = null;
  }

  /** Returns true if field provinceName is set (has been asigned a value) and false otherwise */
  public boolean isSetProvinceName() {
    return this.provinceName != null;
  }

  public void setProvinceNameIsSet(boolean value) {
    if (!value) {
      this.provinceName = null;
    }
  }

  public int getCityCode() {
    return this.cityCode;
  }

  public SellerDetail setCityCode(int cityCode) {
    this.cityCode = cityCode;
    setCityCodeIsSet(true);
    return this;
  }

  public void unsetCityCode() {
    __isset_bit_vector.clear(__CITYCODE_ISSET_ID);
  }

  /** Returns true if field cityCode is set (has been asigned a value) and false otherwise */
  public boolean isSetCityCode() {
    return __isset_bit_vector.get(__CITYCODE_ISSET_ID);
  }

  public void setCityCodeIsSet(boolean value) {
    __isset_bit_vector.set(__CITYCODE_ISSET_ID, value);
  }

  public String getCityName() {
    return this.cityName;
  }

  public SellerDetail setCityName(String cityName) {
    this.cityName = cityName;
    return this;
  }

  public void unsetCityName() {
    this.cityName = null;
  }

  /** Returns true if field cityName is set (has been asigned a value) and false otherwise */
  public boolean isSetCityName() {
    return this.cityName != null;
  }

  public void setCityNameIsSet(boolean value) {
    if (!value) {
      this.cityName = null;
    }
  }

  public int getDistrictCode() {
    return this.districtCode;
  }

  public SellerDetail setDistrictCode(int districtCode) {
    this.districtCode = districtCode;
    setDistrictCodeIsSet(true);
    return this;
  }

  public void unsetDistrictCode() {
    __isset_bit_vector.clear(__DISTRICTCODE_ISSET_ID);
  }

  /** Returns true if field districtCode is set (has been asigned a value) and false otherwise */
  public boolean isSetDistrictCode() {
    return __isset_bit_vector.get(__DISTRICTCODE_ISSET_ID);
  }

  public void setDistrictCodeIsSet(boolean value) {
    __isset_bit_vector.set(__DISTRICTCODE_ISSET_ID, value);
  }

  public String getDistrictName() {
    return this.districtName;
  }

  public SellerDetail setDistrictName(String districtName) {
    this.districtName = districtName;
    return this;
  }

  public void unsetDistrictName() {
    this.districtName = null;
  }

  /** Returns true if field districtName is set (has been asigned a value) and false otherwise */
  public boolean isSetDistrictName() {
    return this.districtName != null;
  }

  public void setDistrictNameIsSet(boolean value) {
    if (!value) {
      this.districtName = null;
    }
  }

  public String getStatus() {
    return this.status;
  }

  public SellerDetail setStatus(String status) {
    this.status = status;
    return this;
  }

  public void unsetStatus() {
    this.status = null;
  }

  /** Returns true if field status is set (has been asigned a value) and false otherwise */
  public boolean isSetStatus() {
    return this.status != null;
  }

  public void setStatusIsSet(boolean value) {
    if (!value) {
      this.status = null;
    }
  }

  public String getSellerPhotoJsons() {
    return this.sellerPhotoJsons;
  }

  public SellerDetail setSellerPhotoJsons(String sellerPhotoJsons) {
    this.sellerPhotoJsons = sellerPhotoJsons;
    return this;
  }

  public void unsetSellerPhotoJsons() {
    this.sellerPhotoJsons = null;
  }

  /** Returns true if field sellerPhotoJsons is set (has been asigned a value) and false otherwise */
  public boolean isSetSellerPhotoJsons() {
    return this.sellerPhotoJsons != null;
  }

  public void setSellerPhotoJsonsIsSet(boolean value) {
    if (!value) {
      this.sellerPhotoJsons = null;
    }
  }

  public String getContractPhotoJsons() {
    return this.contractPhotoJsons;
  }

  public SellerDetail setContractPhotoJsons(String contractPhotoJsons) {
    this.contractPhotoJsons = contractPhotoJsons;
    return this;
  }

  public void unsetContractPhotoJsons() {
    this.contractPhotoJsons = null;
  }

  /** Returns true if field contractPhotoJsons is set (has been asigned a value) and false otherwise */
  public boolean isSetContractPhotoJsons() {
    return this.contractPhotoJsons != null;
  }

  public void setContractPhotoJsonsIsSet(boolean value) {
    if (!value) {
      this.contractPhotoJsons = null;
    }
  }

  public String getBelongSchoolList() {
    return this.belongSchoolList;
  }

  public SellerDetail setBelongSchoolList(String belongSchoolList) {
    this.belongSchoolList = belongSchoolList;
    return this;
  }

  public void unsetBelongSchoolList() {
    this.belongSchoolList = null;
  }

  /** Returns true if field belongSchoolList is set (has been asigned a value) and false otherwise */
  public boolean isSetBelongSchoolList() {
    return this.belongSchoolList != null;
  }

  public void setBelongSchoolListIsSet(boolean value) {
    if (!value) {
      this.belongSchoolList = null;
    }
  }

  public String getExtraData1() {
    return this.extraData1;
  }

  public SellerDetail setExtraData1(String extraData1) {
    this.extraData1 = extraData1;
    return this;
  }

  public void unsetExtraData1() {
    this.extraData1 = null;
  }

  /** Returns true if field extraData1 is set (has been asigned a value) and false otherwise */
  public boolean isSetExtraData1() {
    return this.extraData1 != null;
  }

  public void setExtraData1IsSet(boolean value) {
    if (!value) {
      this.extraData1 = null;
    }
  }

  public String getExtraData2() {
    return this.extraData2;
  }

  public SellerDetail setExtraData2(String extraData2) {
    this.extraData2 = extraData2;
    return this;
  }

  public void unsetExtraData2() {
    this.extraData2 = null;
  }

  /** Returns true if field extraData2 is set (has been asigned a value) and false otherwise */
  public boolean isSetExtraData2() {
    return this.extraData2 != null;
  }

  public void setExtraData2IsSet(boolean value) {
    if (!value) {
      this.extraData2 = null;
    }
  }

  public long getCreateTime() {
    return this.createTime;
  }

  public SellerDetail setCreateTime(long createTime) {
    this.createTime = createTime;
    setCreateTimeIsSet(true);
    return this;
  }

  public void unsetCreateTime() {
    __isset_bit_vector.clear(__CREATETIME_ISSET_ID);
  }

  /** Returns true if field createTime is set (has been asigned a value) and false otherwise */
  public boolean isSetCreateTime() {
    return __isset_bit_vector.get(__CREATETIME_ISSET_ID);
  }

  public void setCreateTimeIsSet(boolean value) {
    __isset_bit_vector.set(__CREATETIME_ISSET_ID, value);
  }

  public long getUpdateTime() {
    return this.updateTime;
  }

  public SellerDetail setUpdateTime(long updateTime) {
    this.updateTime = updateTime;
    setUpdateTimeIsSet(true);
    return this;
  }

  public void unsetUpdateTime() {
    __isset_bit_vector.clear(__UPDATETIME_ISSET_ID);
  }

  /** Returns true if field updateTime is set (has been asigned a value) and false otherwise */
  public boolean isSetUpdateTime() {
    return __isset_bit_vector.get(__UPDATETIME_ISSET_ID);
  }

  public void setUpdateTimeIsSet(boolean value) {
    __isset_bit_vector.set(__UPDATETIME_ISSET_ID, value);
  }

  public long getOnlineTime() {
    return this.onlineTime;
  }

  public SellerDetail setOnlineTime(long onlineTime) {
    this.onlineTime = onlineTime;
    setOnlineTimeIsSet(true);
    return this;
  }

  public void unsetOnlineTime() {
    __isset_bit_vector.clear(__ONLINETIME_ISSET_ID);
  }

  /** Returns true if field onlineTime is set (has been asigned a value) and false otherwise */
  public boolean isSetOnlineTime() {
    return __isset_bit_vector.get(__ONLINETIME_ISSET_ID);
  }

  public void setOnlineTimeIsSet(boolean value) {
    __isset_bit_vector.set(__ONLINETIME_ISSET_ID, value);
  }

  public long getOfflineTime() {
    return this.offlineTime;
  }

  public SellerDetail setOfflineTime(long offlineTime) {
    this.offlineTime = offlineTime;
    setOfflineTimeIsSet(true);
    return this;
  }

  public void unsetOfflineTime() {
    __isset_bit_vector.clear(__OFFLINETIME_ISSET_ID);
  }

  /** Returns true if field offlineTime is set (has been asigned a value) and false otherwise */
  public boolean isSetOfflineTime() {
    return __isset_bit_vector.get(__OFFLINETIME_ISSET_ID);
  }

  public void setOfflineTimeIsSet(boolean value) {
    __isset_bit_vector.set(__OFFLINETIME_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((Integer)value);
      }
      break;

    case SELLER_ID:
      if (value == null) {
        unsetSellerId();
      } else {
        setSellerId((String)value);
      }
      break;

    case SELLER_NAME:
      if (value == null) {
        unsetSellerName();
      } else {
        setSellerName((String)value);
      }
      break;

    case SELLER_ADDRESS:
      if (value == null) {
        unsetSellerAddress();
      } else {
        setSellerAddress((String)value);
      }
      break;

    case SELLER_COORDINATE:
      if (value == null) {
        unsetSellerCoordinate();
      } else {
        setSellerCoordinate((String)value);
      }
      break;

    case SELLER_DESC:
      if (value == null) {
        unsetSellerDesc();
      } else {
        setSellerDesc((String)value);
      }
      break;

    case SELLER_INFO:
      if (value == null) {
        unsetSellerInfo();
      } else {
        setSellerInfo((String)value);
      }
      break;

    case PROVINCE_CODE:
      if (value == null) {
        unsetProvinceCode();
      } else {
        setProvinceCode((Integer)value);
      }
      break;

    case PROVINCE_NAME:
      if (value == null) {
        unsetProvinceName();
      } else {
        setProvinceName((String)value);
      }
      break;

    case CITY_CODE:
      if (value == null) {
        unsetCityCode();
      } else {
        setCityCode((Integer)value);
      }
      break;

    case CITY_NAME:
      if (value == null) {
        unsetCityName();
      } else {
        setCityName((String)value);
      }
      break;

    case DISTRICT_CODE:
      if (value == null) {
        unsetDistrictCode();
      } else {
        setDistrictCode((Integer)value);
      }
      break;

    case DISTRICT_NAME:
      if (value == null) {
        unsetDistrictName();
      } else {
        setDistrictName((String)value);
      }
      break;

    case STATUS:
      if (value == null) {
        unsetStatus();
      } else {
        setStatus((String)value);
      }
      break;

    case SELLER_PHOTO_JSONS:
      if (value == null) {
        unsetSellerPhotoJsons();
      } else {
        setSellerPhotoJsons((String)value);
      }
      break;

    case CONTRACT_PHOTO_JSONS:
      if (value == null) {
        unsetContractPhotoJsons();
      } else {
        setContractPhotoJsons((String)value);
      }
      break;

    case BELONG_SCHOOL_LIST:
      if (value == null) {
        unsetBelongSchoolList();
      } else {
        setBelongSchoolList((String)value);
      }
      break;

    case EXTRA_DATA1:
      if (value == null) {
        unsetExtraData1();
      } else {
        setExtraData1((String)value);
      }
      break;

    case EXTRA_DATA2:
      if (value == null) {
        unsetExtraData2();
      } else {
        setExtraData2((String)value);
      }
      break;

    case CREATE_TIME:
      if (value == null) {
        unsetCreateTime();
      } else {
        setCreateTime((Long)value);
      }
      break;

    case UPDATE_TIME:
      if (value == null) {
        unsetUpdateTime();
      } else {
        setUpdateTime((Long)value);
      }
      break;

    case ONLINE_TIME:
      if (value == null) {
        unsetOnlineTime();
      } else {
        setOnlineTime((Long)value);
      }
      break;

    case OFFLINE_TIME:
      if (value == null) {
        unsetOfflineTime();
      } else {
        setOfflineTime((Long)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return new Integer(getId());

    case SELLER_ID:
      return getSellerId();

    case SELLER_NAME:
      return getSellerName();

    case SELLER_ADDRESS:
      return getSellerAddress();

    case SELLER_COORDINATE:
      return getSellerCoordinate();

    case SELLER_DESC:
      return getSellerDesc();

    case SELLER_INFO:
      return getSellerInfo();

    case PROVINCE_CODE:
      return new Integer(getProvinceCode());

    case PROVINCE_NAME:
      return getProvinceName();

    case CITY_CODE:
      return new Integer(getCityCode());

    case CITY_NAME:
      return getCityName();

    case DISTRICT_CODE:
      return new Integer(getDistrictCode());

    case DISTRICT_NAME:
      return getDistrictName();

    case STATUS:
      return getStatus();

    case SELLER_PHOTO_JSONS:
      return getSellerPhotoJsons();

    case CONTRACT_PHOTO_JSONS:
      return getContractPhotoJsons();

    case BELONG_SCHOOL_LIST:
      return getBelongSchoolList();

    case EXTRA_DATA1:
      return getExtraData1();

    case EXTRA_DATA2:
      return getExtraData2();

    case CREATE_TIME:
      return new Long(getCreateTime());

    case UPDATE_TIME:
      return new Long(getUpdateTime());

    case ONLINE_TIME:
      return new Long(getOnlineTime());

    case OFFLINE_TIME:
      return new Long(getOfflineTime());

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been asigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case SELLER_ID:
      return isSetSellerId();
    case SELLER_NAME:
      return isSetSellerName();
    case SELLER_ADDRESS:
      return isSetSellerAddress();
    case SELLER_COORDINATE:
      return isSetSellerCoordinate();
    case SELLER_DESC:
      return isSetSellerDesc();
    case SELLER_INFO:
      return isSetSellerInfo();
    case PROVINCE_CODE:
      return isSetProvinceCode();
    case PROVINCE_NAME:
      return isSetProvinceName();
    case CITY_CODE:
      return isSetCityCode();
    case CITY_NAME:
      return isSetCityName();
    case DISTRICT_CODE:
      return isSetDistrictCode();
    case DISTRICT_NAME:
      return isSetDistrictName();
    case STATUS:
      return isSetStatus();
    case SELLER_PHOTO_JSONS:
      return isSetSellerPhotoJsons();
    case CONTRACT_PHOTO_JSONS:
      return isSetContractPhotoJsons();
    case BELONG_SCHOOL_LIST:
      return isSetBelongSchoolList();
    case EXTRA_DATA1:
      return isSetExtraData1();
    case EXTRA_DATA2:
      return isSetExtraData2();
    case CREATE_TIME:
      return isSetCreateTime();
    case UPDATE_TIME:
      return isSetUpdateTime();
    case ONLINE_TIME:
      return isSetOnlineTime();
    case OFFLINE_TIME:
      return isSetOfflineTime();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof SellerDetail)
      return this.equals((SellerDetail)that);
    return false;
  }

  public boolean equals(SellerDetail that) {
    if (that == null)
      return false;

    boolean this_present_id = true;
    boolean that_present_id = true;
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (this.id != that.id)
        return false;
    }

    boolean this_present_sellerId = true && this.isSetSellerId();
    boolean that_present_sellerId = true && that.isSetSellerId();
    if (this_present_sellerId || that_present_sellerId) {
      if (!(this_present_sellerId && that_present_sellerId))
        return false;
      if (!this.sellerId.equals(that.sellerId))
        return false;
    }

    boolean this_present_sellerName = true && this.isSetSellerName();
    boolean that_present_sellerName = true && that.isSetSellerName();
    if (this_present_sellerName || that_present_sellerName) {
      if (!(this_present_sellerName && that_present_sellerName))
        return false;
      if (!this.sellerName.equals(that.sellerName))
        return false;
    }

    boolean this_present_sellerAddress = true && this.isSetSellerAddress();
    boolean that_present_sellerAddress = true && that.isSetSellerAddress();
    if (this_present_sellerAddress || that_present_sellerAddress) {
      if (!(this_present_sellerAddress && that_present_sellerAddress))
        return false;
      if (!this.sellerAddress.equals(that.sellerAddress))
        return false;
    }

    boolean this_present_sellerCoordinate = true && this.isSetSellerCoordinate();
    boolean that_present_sellerCoordinate = true && that.isSetSellerCoordinate();
    if (this_present_sellerCoordinate || that_present_sellerCoordinate) {
      if (!(this_present_sellerCoordinate && that_present_sellerCoordinate))
        return false;
      if (!this.sellerCoordinate.equals(that.sellerCoordinate))
        return false;
    }

    boolean this_present_sellerDesc = true && this.isSetSellerDesc();
    boolean that_present_sellerDesc = true && that.isSetSellerDesc();
    if (this_present_sellerDesc || that_present_sellerDesc) {
      if (!(this_present_sellerDesc && that_present_sellerDesc))
        return false;
      if (!this.sellerDesc.equals(that.sellerDesc))
        return false;
    }

    boolean this_present_sellerInfo = true && this.isSetSellerInfo();
    boolean that_present_sellerInfo = true && that.isSetSellerInfo();
    if (this_present_sellerInfo || that_present_sellerInfo) {
      if (!(this_present_sellerInfo && that_present_sellerInfo))
        return false;
      if (!this.sellerInfo.equals(that.sellerInfo))
        return false;
    }

    boolean this_present_provinceCode = true;
    boolean that_present_provinceCode = true;
    if (this_present_provinceCode || that_present_provinceCode) {
      if (!(this_present_provinceCode && that_present_provinceCode))
        return false;
      if (this.provinceCode != that.provinceCode)
        return false;
    }

    boolean this_present_provinceName = true && this.isSetProvinceName();
    boolean that_present_provinceName = true && that.isSetProvinceName();
    if (this_present_provinceName || that_present_provinceName) {
      if (!(this_present_provinceName && that_present_provinceName))
        return false;
      if (!this.provinceName.equals(that.provinceName))
        return false;
    }

    boolean this_present_cityCode = true;
    boolean that_present_cityCode = true;
    if (this_present_cityCode || that_present_cityCode) {
      if (!(this_present_cityCode && that_present_cityCode))
        return false;
      if (this.cityCode != that.cityCode)
        return false;
    }

    boolean this_present_cityName = true && this.isSetCityName();
    boolean that_present_cityName = true && that.isSetCityName();
    if (this_present_cityName || that_present_cityName) {
      if (!(this_present_cityName && that_present_cityName))
        return false;
      if (!this.cityName.equals(that.cityName))
        return false;
    }

    boolean this_present_districtCode = true;
    boolean that_present_districtCode = true;
    if (this_present_districtCode || that_present_districtCode) {
      if (!(this_present_districtCode && that_present_districtCode))
        return false;
      if (this.districtCode != that.districtCode)
        return false;
    }

    boolean this_present_districtName = true && this.isSetDistrictName();
    boolean that_present_districtName = true && that.isSetDistrictName();
    if (this_present_districtName || that_present_districtName) {
      if (!(this_present_districtName && that_present_districtName))
        return false;
      if (!this.districtName.equals(that.districtName))
        return false;
    }

    boolean this_present_status = true && this.isSetStatus();
    boolean that_present_status = true && that.isSetStatus();
    if (this_present_status || that_present_status) {
      if (!(this_present_status && that_present_status))
        return false;
      if (!this.status.equals(that.status))
        return false;
    }

    boolean this_present_sellerPhotoJsons = true && this.isSetSellerPhotoJsons();
    boolean that_present_sellerPhotoJsons = true && that.isSetSellerPhotoJsons();
    if (this_present_sellerPhotoJsons || that_present_sellerPhotoJsons) {
      if (!(this_present_sellerPhotoJsons && that_present_sellerPhotoJsons))
        return false;
      if (!this.sellerPhotoJsons.equals(that.sellerPhotoJsons))
        return false;
    }

    boolean this_present_contractPhotoJsons = true && this.isSetContractPhotoJsons();
    boolean that_present_contractPhotoJsons = true && that.isSetContractPhotoJsons();
    if (this_present_contractPhotoJsons || that_present_contractPhotoJsons) {
      if (!(this_present_contractPhotoJsons && that_present_contractPhotoJsons))
        return false;
      if (!this.contractPhotoJsons.equals(that.contractPhotoJsons))
        return false;
    }

    boolean this_present_belongSchoolList = true && this.isSetBelongSchoolList();
    boolean that_present_belongSchoolList = true && that.isSetBelongSchoolList();
    if (this_present_belongSchoolList || that_present_belongSchoolList) {
      if (!(this_present_belongSchoolList && that_present_belongSchoolList))
        return false;
      if (!this.belongSchoolList.equals(that.belongSchoolList))
        return false;
    }

    boolean this_present_extraData1 = true && this.isSetExtraData1();
    boolean that_present_extraData1 = true && that.isSetExtraData1();
    if (this_present_extraData1 || that_present_extraData1) {
      if (!(this_present_extraData1 && that_present_extraData1))
        return false;
      if (!this.extraData1.equals(that.extraData1))
        return false;
    }

    boolean this_present_extraData2 = true && this.isSetExtraData2();
    boolean that_present_extraData2 = true && that.isSetExtraData2();
    if (this_present_extraData2 || that_present_extraData2) {
      if (!(this_present_extraData2 && that_present_extraData2))
        return false;
      if (!this.extraData2.equals(that.extraData2))
        return false;
    }

    boolean this_present_createTime = true;
    boolean that_present_createTime = true;
    if (this_present_createTime || that_present_createTime) {
      if (!(this_present_createTime && that_present_createTime))
        return false;
      if (this.createTime != that.createTime)
        return false;
    }

    boolean this_present_updateTime = true;
    boolean that_present_updateTime = true;
    if (this_present_updateTime || that_present_updateTime) {
      if (!(this_present_updateTime && that_present_updateTime))
        return false;
      if (this.updateTime != that.updateTime)
        return false;
    }

    boolean this_present_onlineTime = true;
    boolean that_present_onlineTime = true;
    if (this_present_onlineTime || that_present_onlineTime) {
      if (!(this_present_onlineTime && that_present_onlineTime))
        return false;
      if (this.onlineTime != that.onlineTime)
        return false;
    }

    boolean this_present_offlineTime = true;
    boolean that_present_offlineTime = true;
    if (this_present_offlineTime || that_present_offlineTime) {
      if (!(this_present_offlineTime && that_present_offlineTime))
        return false;
      if (this.offlineTime != that.offlineTime)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  public int compareTo(SellerDetail other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;
    SellerDetail typedOther = (SellerDetail)other;

    lastComparison = Boolean.valueOf(isSetId()).compareTo(typedOther.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = TBaseHelper.compareTo(this.id, typedOther.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSellerId()).compareTo(typedOther.isSetSellerId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSellerId()) {
      lastComparison = TBaseHelper.compareTo(this.sellerId, typedOther.sellerId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSellerName()).compareTo(typedOther.isSetSellerName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSellerName()) {
      lastComparison = TBaseHelper.compareTo(this.sellerName, typedOther.sellerName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSellerAddress()).compareTo(typedOther.isSetSellerAddress());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSellerAddress()) {
      lastComparison = TBaseHelper.compareTo(this.sellerAddress, typedOther.sellerAddress);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSellerCoordinate()).compareTo(typedOther.isSetSellerCoordinate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSellerCoordinate()) {
      lastComparison = TBaseHelper.compareTo(this.sellerCoordinate, typedOther.sellerCoordinate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSellerDesc()).compareTo(typedOther.isSetSellerDesc());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSellerDesc()) {
      lastComparison = TBaseHelper.compareTo(this.sellerDesc, typedOther.sellerDesc);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSellerInfo()).compareTo(typedOther.isSetSellerInfo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSellerInfo()) {
      lastComparison = TBaseHelper.compareTo(this.sellerInfo, typedOther.sellerInfo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProvinceCode()).compareTo(typedOther.isSetProvinceCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProvinceCode()) {
      lastComparison = TBaseHelper.compareTo(this.provinceCode, typedOther.provinceCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProvinceName()).compareTo(typedOther.isSetProvinceName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProvinceName()) {
      lastComparison = TBaseHelper.compareTo(this.provinceName, typedOther.provinceName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCityCode()).compareTo(typedOther.isSetCityCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCityCode()) {
      lastComparison = TBaseHelper.compareTo(this.cityCode, typedOther.cityCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCityName()).compareTo(typedOther.isSetCityName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCityName()) {
      lastComparison = TBaseHelper.compareTo(this.cityName, typedOther.cityName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDistrictCode()).compareTo(typedOther.isSetDistrictCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDistrictCode()) {
      lastComparison = TBaseHelper.compareTo(this.districtCode, typedOther.districtCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDistrictName()).compareTo(typedOther.isSetDistrictName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDistrictName()) {
      lastComparison = TBaseHelper.compareTo(this.districtName, typedOther.districtName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStatus()).compareTo(typedOther.isSetStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStatus()) {
      lastComparison = TBaseHelper.compareTo(this.status, typedOther.status);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSellerPhotoJsons()).compareTo(typedOther.isSetSellerPhotoJsons());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSellerPhotoJsons()) {
      lastComparison = TBaseHelper.compareTo(this.sellerPhotoJsons, typedOther.sellerPhotoJsons);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetContractPhotoJsons()).compareTo(typedOther.isSetContractPhotoJsons());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetContractPhotoJsons()) {
      lastComparison = TBaseHelper.compareTo(this.contractPhotoJsons, typedOther.contractPhotoJsons);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBelongSchoolList()).compareTo(typedOther.isSetBelongSchoolList());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBelongSchoolList()) {
      lastComparison = TBaseHelper.compareTo(this.belongSchoolList, typedOther.belongSchoolList);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetExtraData1()).compareTo(typedOther.isSetExtraData1());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetExtraData1()) {
      lastComparison = TBaseHelper.compareTo(this.extraData1, typedOther.extraData1);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetExtraData2()).compareTo(typedOther.isSetExtraData2());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetExtraData2()) {
      lastComparison = TBaseHelper.compareTo(this.extraData2, typedOther.extraData2);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreateTime()).compareTo(typedOther.isSetCreateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateTime()) {
      lastComparison = TBaseHelper.compareTo(this.createTime, typedOther.createTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUpdateTime()).compareTo(typedOther.isSetUpdateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUpdateTime()) {
      lastComparison = TBaseHelper.compareTo(this.updateTime, typedOther.updateTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOnlineTime()).compareTo(typedOther.isSetOnlineTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOnlineTime()) {
      lastComparison = TBaseHelper.compareTo(this.onlineTime, typedOther.onlineTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOfflineTime()).compareTo(typedOther.isSetOfflineTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOfflineTime()) {
      lastComparison = TBaseHelper.compareTo(this.offlineTime, typedOther.offlineTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(TProtocol iprot) throws TException {
    TField field;
    iprot.readStructBegin();
    while (true)
    {
      field = iprot.readFieldBegin();
      if (field.type == TType.STOP) { 
        break;
      }
      switch (field.id) {
        case 1: // ID
          if (field.type == TType.I32) {
            this.id = iprot.readI32();
            setIdIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 2: // SELLER_ID
          if (field.type == TType.STRING) {
            this.sellerId = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 3: // SELLER_NAME
          if (field.type == TType.STRING) {
            this.sellerName = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 4: // SELLER_ADDRESS
          if (field.type == TType.STRING) {
            this.sellerAddress = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 5: // SELLER_COORDINATE
          if (field.type == TType.STRING) {
            this.sellerCoordinate = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 6: // SELLER_DESC
          if (field.type == TType.STRING) {
            this.sellerDesc = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 7: // SELLER_INFO
          if (field.type == TType.STRING) {
            this.sellerInfo = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 8: // PROVINCE_CODE
          if (field.type == TType.I32) {
            this.provinceCode = iprot.readI32();
            setProvinceCodeIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 9: // PROVINCE_NAME
          if (field.type == TType.STRING) {
            this.provinceName = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 10: // CITY_CODE
          if (field.type == TType.I32) {
            this.cityCode = iprot.readI32();
            setCityCodeIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 11: // CITY_NAME
          if (field.type == TType.STRING) {
            this.cityName = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 12: // DISTRICT_CODE
          if (field.type == TType.I32) {
            this.districtCode = iprot.readI32();
            setDistrictCodeIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 13: // DISTRICT_NAME
          if (field.type == TType.STRING) {
            this.districtName = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 14: // STATUS
          if (field.type == TType.STRING) {
            this.status = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 15: // SELLER_PHOTO_JSONS
          if (field.type == TType.STRING) {
            this.sellerPhotoJsons = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 16: // CONTRACT_PHOTO_JSONS
          if (field.type == TType.STRING) {
            this.contractPhotoJsons = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 17: // BELONG_SCHOOL_LIST
          if (field.type == TType.STRING) {
            this.belongSchoolList = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 18: // EXTRA_DATA1
          if (field.type == TType.STRING) {
            this.extraData1 = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 19: // EXTRA_DATA2
          if (field.type == TType.STRING) {
            this.extraData2 = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 20: // CREATE_TIME
          if (field.type == TType.I64) {
            this.createTime = iprot.readI64();
            setCreateTimeIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 21: // UPDATE_TIME
          if (field.type == TType.I64) {
            this.updateTime = iprot.readI64();
            setUpdateTimeIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 22: // ONLINE_TIME
          if (field.type == TType.I64) {
            this.onlineTime = iprot.readI64();
            setOnlineTimeIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 23: // OFFLINE_TIME
          if (field.type == TType.I64) {
            this.offlineTime = iprot.readI64();
            setOfflineTimeIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        default:
          TProtocolUtil.skip(iprot, field.type);
      }
      iprot.readFieldEnd();
    }
    iprot.readStructEnd();

    // check for required fields of primitive type, which can't be checked in the validate method
    validate();
  }

  public void write(TProtocol oprot) throws TException {
    validate();

    oprot.writeStructBegin(STRUCT_DESC);
    oprot.writeFieldBegin(ID_FIELD_DESC);
    oprot.writeI32(this.id);
    oprot.writeFieldEnd();
    if (this.sellerId != null) {
      oprot.writeFieldBegin(SELLER_ID_FIELD_DESC);
      oprot.writeString(this.sellerId);
      oprot.writeFieldEnd();
    }
    if (this.sellerName != null) {
      oprot.writeFieldBegin(SELLER_NAME_FIELD_DESC);
      oprot.writeString(this.sellerName);
      oprot.writeFieldEnd();
    }
    if (this.sellerAddress != null) {
      oprot.writeFieldBegin(SELLER_ADDRESS_FIELD_DESC);
      oprot.writeString(this.sellerAddress);
      oprot.writeFieldEnd();
    }
    if (this.sellerCoordinate != null) {
      oprot.writeFieldBegin(SELLER_COORDINATE_FIELD_DESC);
      oprot.writeString(this.sellerCoordinate);
      oprot.writeFieldEnd();
    }
    if (this.sellerDesc != null) {
      oprot.writeFieldBegin(SELLER_DESC_FIELD_DESC);
      oprot.writeString(this.sellerDesc);
      oprot.writeFieldEnd();
    }
    if (this.sellerInfo != null) {
      oprot.writeFieldBegin(SELLER_INFO_FIELD_DESC);
      oprot.writeString(this.sellerInfo);
      oprot.writeFieldEnd();
    }
    oprot.writeFieldBegin(PROVINCE_CODE_FIELD_DESC);
    oprot.writeI32(this.provinceCode);
    oprot.writeFieldEnd();
    if (this.provinceName != null) {
      oprot.writeFieldBegin(PROVINCE_NAME_FIELD_DESC);
      oprot.writeString(this.provinceName);
      oprot.writeFieldEnd();
    }
    oprot.writeFieldBegin(CITY_CODE_FIELD_DESC);
    oprot.writeI32(this.cityCode);
    oprot.writeFieldEnd();
    if (this.cityName != null) {
      oprot.writeFieldBegin(CITY_NAME_FIELD_DESC);
      oprot.writeString(this.cityName);
      oprot.writeFieldEnd();
    }
    oprot.writeFieldBegin(DISTRICT_CODE_FIELD_DESC);
    oprot.writeI32(this.districtCode);
    oprot.writeFieldEnd();
    if (this.districtName != null) {
      oprot.writeFieldBegin(DISTRICT_NAME_FIELD_DESC);
      oprot.writeString(this.districtName);
      oprot.writeFieldEnd();
    }
    if (this.status != null) {
      oprot.writeFieldBegin(STATUS_FIELD_DESC);
      oprot.writeString(this.status);
      oprot.writeFieldEnd();
    }
    if (this.sellerPhotoJsons != null) {
      oprot.writeFieldBegin(SELLER_PHOTO_JSONS_FIELD_DESC);
      oprot.writeString(this.sellerPhotoJsons);
      oprot.writeFieldEnd();
    }
    if (this.contractPhotoJsons != null) {
      oprot.writeFieldBegin(CONTRACT_PHOTO_JSONS_FIELD_DESC);
      oprot.writeString(this.contractPhotoJsons);
      oprot.writeFieldEnd();
    }
    if (this.belongSchoolList != null) {
      oprot.writeFieldBegin(BELONG_SCHOOL_LIST_FIELD_DESC);
      oprot.writeString(this.belongSchoolList);
      oprot.writeFieldEnd();
    }
    if (this.extraData1 != null) {
      oprot.writeFieldBegin(EXTRA_DATA1_FIELD_DESC);
      oprot.writeString(this.extraData1);
      oprot.writeFieldEnd();
    }
    if (this.extraData2 != null) {
      oprot.writeFieldBegin(EXTRA_DATA2_FIELD_DESC);
      oprot.writeString(this.extraData2);
      oprot.writeFieldEnd();
    }
    oprot.writeFieldBegin(CREATE_TIME_FIELD_DESC);
    oprot.writeI64(this.createTime);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(UPDATE_TIME_FIELD_DESC);
    oprot.writeI64(this.updateTime);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(ONLINE_TIME_FIELD_DESC);
    oprot.writeI64(this.onlineTime);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(OFFLINE_TIME_FIELD_DESC);
    oprot.writeI64(this.offlineTime);
    oprot.writeFieldEnd();
    oprot.writeFieldStop();
    oprot.writeStructEnd();
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("SellerDetail(");
    boolean first = true;

    sb.append("id:");
    sb.append(this.id);
    first = false;
    if (!first) sb.append(", ");
    sb.append("sellerId:");
    if (this.sellerId == null) {
      sb.append("null");
    } else {
      sb.append(this.sellerId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("sellerName:");
    if (this.sellerName == null) {
      sb.append("null");
    } else {
      sb.append(this.sellerName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("sellerAddress:");
    if (this.sellerAddress == null) {
      sb.append("null");
    } else {
      sb.append(this.sellerAddress);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("sellerCoordinate:");
    if (this.sellerCoordinate == null) {
      sb.append("null");
    } else {
      sb.append(this.sellerCoordinate);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("sellerDesc:");
    if (this.sellerDesc == null) {
      sb.append("null");
    } else {
      sb.append(this.sellerDesc);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("sellerInfo:");
    if (this.sellerInfo == null) {
      sb.append("null");
    } else {
      sb.append(this.sellerInfo);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("provinceCode:");
    sb.append(this.provinceCode);
    first = false;
    if (!first) sb.append(", ");
    sb.append("provinceName:");
    if (this.provinceName == null) {
      sb.append("null");
    } else {
      sb.append(this.provinceName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("cityCode:");
    sb.append(this.cityCode);
    first = false;
    if (!first) sb.append(", ");
    sb.append("cityName:");
    if (this.cityName == null) {
      sb.append("null");
    } else {
      sb.append(this.cityName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("districtCode:");
    sb.append(this.districtCode);
    first = false;
    if (!first) sb.append(", ");
    sb.append("districtName:");
    if (this.districtName == null) {
      sb.append("null");
    } else {
      sb.append(this.districtName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("status:");
    if (this.status == null) {
      sb.append("null");
    } else {
      sb.append(this.status);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("sellerPhotoJsons:");
    if (this.sellerPhotoJsons == null) {
      sb.append("null");
    } else {
      sb.append(this.sellerPhotoJsons);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("contractPhotoJsons:");
    if (this.contractPhotoJsons == null) {
      sb.append("null");
    } else {
      sb.append(this.contractPhotoJsons);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("belongSchoolList:");
    if (this.belongSchoolList == null) {
      sb.append("null");
    } else {
      sb.append(this.belongSchoolList);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("extraData1:");
    if (this.extraData1 == null) {
      sb.append("null");
    } else {
      sb.append(this.extraData1);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("extraData2:");
    if (this.extraData2 == null) {
      sb.append("null");
    } else {
      sb.append(this.extraData2);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("createTime:");
    sb.append(this.createTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("updateTime:");
    sb.append(this.updateTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("onlineTime:");
    sb.append(this.onlineTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("offlineTime:");
    sb.append(this.offlineTime);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws TException {
    // check for required fields
  }

}

